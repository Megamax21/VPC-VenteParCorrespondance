
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author lhote
 */
public final class IHM_Responsable extends javax.swing.JFrame {

    /**
     * Creates new form IHM_Responsable
     */
    public Connection connection = null;
    public int ID_Select_Client=0;
    public int ID_Select_Article=0;
    public int ID_Select_Commande=0;
    public int ID_Select_Commande_Historique=0;
    public IHM_Responsable() {
        initComponents();
        jTabbedPaneFenetre.setVisible(false);
        
        /* A décommenter si je suis au lycée ! ! !
        String url = "jdbc:mysql://10.194.196.225:3306/vpc";
        String user = "VPC";
        String password = "123456";
        */
        /* A décommenter si je suis hors des cours ! ! ! */
        String url = "jdbc:mysql://localhost/vpc";
        String user = "root";
        String password = "";
        System.out.println("COMMENCEMENT");
        
             
        try {
            this.connection = DriverManager.getConnection(url,user,password);
            System.out.println("Connection successful");
            
            // Tout ce qu'il y a à faire après la connexion à la BDD, au commencement
            this.RemplirListeClients();
            this.RemplirListeArticles();
            this.RemplirListeCommandes();
            this.RemplirListeCommandesHist();
            
            
        } catch (SQLException ex) {
            Logger.getLogger(IHM_Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialogRefusCommande = new javax.swing.JDialog();
        jLabel7 = new javax.swing.JLabel();
        jButtonRefuserRefusCommande = new javax.swing.JButton();
        jButtonValiderRefusCommande = new javax.swing.JButton();
        jTabbedPaneFenetre = new javax.swing.JTabbedPane();
        jPanelClients = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanelModifClient = new javax.swing.JPanel();
        jButtonModifierClient = new javax.swing.JButton();
        jButtonSupprimerClient = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextFieldNomClient = new javax.swing.JTextField();
        jTextFieldPrenomClient = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTextFieldMailClient = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTextFieldNumClient = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaAdresse = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableClients = new javax.swing.JTable();
        jButtonRafraichirClients = new javax.swing.JButton();
        jPanelArticles = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jPanelModifClient1 = new javax.swing.JPanel();
        jButtonModifierArticle = new javax.swing.JButton();
        jButtonSupprimerArticle = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jTextFieldLibelleArticle = new javax.swing.JTextField();
        jTextFieldStockArticle = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jTextFieldPrixArticle = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jTextFieldRefArticle = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabelGenreArticle = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTableArticles = new javax.swing.JTable();
        jButtonRafraichirArticles = new javax.swing.JButton();
        jPanelCommandes = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jPanelModifClient2 = new javax.swing.JPanel();
        jButtonRefuserCommande = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jTextFieldIdClient = new javax.swing.JTextField();
        jTextFieldDateCommande = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableContenuCommande = new javax.swing.JTable();
        jButtonValiderCommande = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabelPrixCommande = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTableCommandes = new javax.swing.JTable();
        jButtonRafraichirCommandes = new javax.swing.JButton();
        jPanelAlertes = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButtonRafraichirAlertes = new javax.swing.JButton();
        jPanelHistorique = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTableCommandesHist = new javax.swing.JTable();
        jButtonRafraichirHistorique = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabelHistoriquePrixTotal = new javax.swing.JLabel();
        jLabelClientHistorique = new javax.swing.JLabel();
        jScrollPaneHistoriqueArticles = new javax.swing.JScrollPane();
        jTextAreaHistoriqueArticles = new javax.swing.JTextArea();
        jPanelConnexion = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldConnectName = new javax.swing.JTextField();
        jTextFieldConnectPWord = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButtonConnexion = new javax.swing.JButton();

        jLabel7.setFont(new java.awt.Font("Amiri Quran", 1, 24)); // NOI18N
        jLabel7.setText("Etes vous sur de vouloir refuser cette commande ?");

        jButtonRefuserRefusCommande.setText("NON");
        jButtonRefuserRefusCommande.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRefuserRefusCommandeActionPerformed(evt);
            }
        });

        jButtonValiderRefusCommande.setText("OUI");
        jButtonValiderRefusCommande.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonValiderRefusCommandeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialogRefusCommandeLayout = new javax.swing.GroupLayout(jDialogRefusCommande.getContentPane());
        jDialogRefusCommande.getContentPane().setLayout(jDialogRefusCommandeLayout);
        jDialogRefusCommandeLayout.setHorizontalGroup(
            jDialogRefusCommandeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogRefusCommandeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialogRefusCommandeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDialogRefusCommandeLayout.createSequentialGroup()
                        .addComponent(jButtonValiderRefusCommande, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonRefuserRefusCommande, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jDialogRefusCommandeLayout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 543, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jDialogRefusCommandeLayout.setVerticalGroup(
            jDialogRefusCommandeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogRefusCommandeLayout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDialogRefusCommandeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonValiderRefusCommande, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonRefuserRefusCommande, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPaneFenetre.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel5.setText("Visualisation et modification des clients");

        jPanelModifClient.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jButtonModifierClient.setText("Modifier");
        jButtonModifierClient.setEnabled(false);
        jButtonModifierClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificationClient(evt);
            }
        });

        jButtonSupprimerClient.setText("Supprimer");
        jButtonSupprimerClient.setEnabled(false);
        jButtonSupprimerClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSupprimerClientActionPerformed(evt);
            }
        });

        jLabel10.setText("Nom :");

        jLabel11.setText("Prénom :");

        jLabel12.setText("Mail :");

        jLabel13.setText("Numéro de téléphone :");

        jLabel14.setText("Adresse :");

        jTextAreaAdresse.setColumns(20);
        jTextAreaAdresse.setRows(5);
        jScrollPane2.setViewportView(jTextAreaAdresse);

        javax.swing.GroupLayout jPanelModifClientLayout = new javax.swing.GroupLayout(jPanelModifClient);
        jPanelModifClient.setLayout(jPanelModifClientLayout);
        jPanelModifClientLayout.setHorizontalGroup(
            jPanelModifClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelModifClientLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelModifClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelModifClientLayout.createSequentialGroup()
                        .addComponent(jButtonModifierClient)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonSupprimerClient))
                    .addGroup(jPanelModifClientLayout.createSequentialGroup()
                        .addGroup(jPanelModifClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addGap(78, 78, 78))
                    .addGroup(jPanelModifClientLayout.createSequentialGroup()
                        .addGroup(jPanelModifClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldMailClient)
                            .addComponent(jTextFieldNumClient)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                            .addGroup(jPanelModifClientLayout.createSequentialGroup()
                                .addGroup(jPanelModifClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldNomClient, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanelModifClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldPrenomClient, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11))))
                        .addContainerGap())))
        );
        jPanelModifClientLayout.setVerticalGroup(
            jPanelModifClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelModifClientLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelModifClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelModifClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldNomClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldPrenomClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldMailClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldNumClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelModifClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonModifierClient)
                    .addComponent(jButtonSupprimerClient))
                .addContainerGap())
        );

        jTableClients.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableClients.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickClient(evt);
            }
        });
        jScrollPane3.setViewportView(jTableClients);

        jButtonRafraichirClients.setText("Rafraîchir");
        jButtonRafraichirClients.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRafraichirClientsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelClientsLayout = new javax.swing.GroupLayout(jPanelClients);
        jPanelClients.setLayout(jPanelClientsLayout);
        jPanelClientsLayout.setHorizontalGroup(
            jPanelClientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelClientsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelClientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanelModifClient, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanelClientsLayout.createSequentialGroup()
                .addGap(182, 182, 182)
                .addComponent(jButtonRafraichirClients, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelClientsLayout.setVerticalGroup(
            jPanelClientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelClientsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelClientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanelModifClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelClientsLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonRafraichirClients)
                .addContainerGap())
        );

        jTabbedPaneFenetre.addTab("Clients", jPanelClients);

        jLabel15.setText("Visualisation et modification des articles");

        jPanelModifClient1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jButtonModifierArticle.setText("Modifier");
        jButtonModifierArticle.setEnabled(false);
        jButtonModifierArticle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModifierArticleActionPerformed(evt);
            }
        });

        jButtonSupprimerArticle.setText("Supprimer");
        jButtonSupprimerArticle.setEnabled(false);
        jButtonSupprimerArticle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSupprimerArticleActionPerformed(evt);
            }
        });

        jLabel16.setText("Libellé :");

        jLabel17.setText("Stock :");

        jLabel18.setText("Prix :");

        jLabel19.setText("Référence :");

        jLabel6.setText("Genre :");

        javax.swing.GroupLayout jPanelModifClient1Layout = new javax.swing.GroupLayout(jPanelModifClient1);
        jPanelModifClient1.setLayout(jPanelModifClient1Layout);
        jPanelModifClient1Layout.setHorizontalGroup(
            jPanelModifClient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelModifClient1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelModifClient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldRefArticle)
                    .addGroup(jPanelModifClient1Layout.createSequentialGroup()
                        .addComponent(jButtonModifierArticle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonSupprimerArticle))
                    .addGroup(jPanelModifClient1Layout.createSequentialGroup()
                        .addGroup(jPanelModifClient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelModifClient1Layout.createSequentialGroup()
                                .addGroup(jPanelModifClient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldLibelleArticle, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel16))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelModifClient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel17)
                                    .addComponent(jTextFieldStockArticle, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19)
                            .addGroup(jPanelModifClient1Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelGenreArticle, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jTextFieldPrixArticle))
                .addContainerGap())
        );
        jPanelModifClient1Layout.setVerticalGroup(
            jPanelModifClient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelModifClient1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelModifClient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelModifClient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldLibelleArticle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldStockArticle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelModifClient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabelGenreArticle, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldPrixArticle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldRefArticle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelModifClient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonModifierArticle)
                    .addComponent(jButtonSupprimerArticle))
                .addContainerGap())
        );

        jTableArticles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Libellé", "Stock"
            }
        ));
        jTableArticles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickArticle(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableArticlesMousePressed(evt);
            }
        });
        jScrollPane5.setViewportView(jTableArticles);

        jButtonRafraichirArticles.setText("Rafraîchir");
        jButtonRafraichirArticles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRafraichirArticlesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelArticlesLayout = new javax.swing.GroupLayout(jPanelArticles);
        jPanelArticles.setLayout(jPanelArticlesLayout);
        jPanelArticlesLayout.setHorizontalGroup(
            jPanelArticlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelArticlesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelArticlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanelArticlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelArticlesLayout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(jButtonRafraichirArticles, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(91, Short.MAX_VALUE))
                    .addGroup(jPanelArticlesLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanelModifClient1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanelArticlesLayout.setVerticalGroup(
            jPanelArticlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelArticlesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelArticlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelArticlesLayout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelArticlesLayout.createSequentialGroup()
                        .addComponent(jPanelModifClient1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonRafraichirArticles)))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        jTabbedPaneFenetre.addTab("Articles", jPanelArticles);

        jLabel21.setText("Visualisation et modification des articles");

        jPanelModifClient2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jButtonRefuserCommande.setText("Refuser");
        jButtonRefuserCommande.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRefuserCommandeActionPerformed(evt);
            }
        });

        jLabel22.setText("Id Client :");

        jLabel23.setText("Date commande :");

        jLabel24.setText("Contenu de la commande");

        jTableContenuCommande.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Article", "Nombre", "Prix indv.", "Prix total."
            }
        ));
        jScrollPane4.setViewportView(jTableContenuCommande);

        jButtonValiderCommande.setText("Valider");
        jButtonValiderCommande.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonValiderCommandeActionPerformed(evt);
            }
        });

        jLabel1.setText("Prix commande :");

        jLabelPrixCommande.setText("0 €");

        javax.swing.GroupLayout jPanelModifClient2Layout = new javax.swing.GroupLayout(jPanelModifClient2);
        jPanelModifClient2.setLayout(jPanelModifClient2Layout);
        jPanelModifClient2Layout.setHorizontalGroup(
            jPanelModifClient2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelModifClient2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelModifClient2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelModifClient2Layout.createSequentialGroup()
                        .addComponent(jButtonValiderCommande, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(jButtonRefuserCommande, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelModifClient2Layout.createSequentialGroup()
                        .addGroup(jPanelModifClient2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelModifClient2Layout.createSequentialGroup()
                                .addGroup(jPanelModifClient2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldIdClient, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel22))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelModifClient2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel23)
                                    .addComponent(jTextFieldDateCommande, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelModifClient2Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelPrixCommande)))
                        .addGap(0, 12, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelModifClient2Layout.setVerticalGroup(
            jPanelModifClient2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelModifClient2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelModifClient2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(jLabel23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelModifClient2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldIdClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldDateCommande, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelModifClient2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabelPrixCommande))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelModifClient2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonRefuserCommande)
                    .addComponent(jButtonValiderCommande))
                .addContainerGap())
        );

        jTableCommandes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Date", "Client"
            }
        ));
        jTableCommandes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                clickCommande(evt);
            }
        });
        jScrollPane6.setViewportView(jTableCommandes);

        jButtonRafraichirCommandes.setText("Rafraîchir");
        jButtonRafraichirCommandes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRafraichirCommandesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelCommandesLayout = new javax.swing.GroupLayout(jPanelCommandes);
        jPanelCommandes.setLayout(jPanelCommandesLayout);
        jPanelCommandesLayout.setHorizontalGroup(
            jPanelCommandesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCommandesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCommandesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCommandesLayout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addGap(0, 35, Short.MAX_VALUE))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelModifClient2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCommandesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonRafraichirCommandes, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(202, 202, 202))
        );
        jPanelCommandesLayout.setVerticalGroup(
            jPanelCommandesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCommandesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCommandesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelModifClient2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelCommandesLayout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonRafraichirCommandes)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        jTabbedPaneFenetre.addTab("Commandes", jPanelCommandes);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID Article", "Demande", "Stock", "Alerte"
            }
        ));
        jScrollPane8.setViewportView(jTable2);

        jButtonRafraichirAlertes.setText("Rafraîchir");

        javax.swing.GroupLayout jPanelAlertesLayout = new javax.swing.GroupLayout(jPanelAlertes);
        jPanelAlertes.setLayout(jPanelAlertesLayout);
        jPanelAlertesLayout.setHorizontalGroup(
            jPanelAlertesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAlertesLayout.createSequentialGroup()
                .addGroup(jPanelAlertesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelAlertesLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelAlertesLayout.createSequentialGroup()
                        .addGap(210, 210, 210)
                        .addComponent(jButtonRafraichirAlertes)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanelAlertesLayout.setVerticalGroup(
            jPanelAlertesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAlertesLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonRafraichirAlertes)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        jTabbedPaneFenetre.addTab("Alertes", jPanelAlertes);

        jTableCommandesHist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID Commande", "ID Client", "Date"
            }
        ));
        jTableCommandesHist.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickHistorique(evt);
            }
        });
        jScrollPane7.setViewportView(jTableCommandesHist);

        jButtonRafraichirHistorique.setText("Rafraichir");
        jButtonRafraichirHistorique.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRafraichirHistoriqueActionPerformed(evt);
            }
        });

        jLabel8.setText("Client :");

        jLabel9.setText("Prix Total :");

        jScrollPaneHistoriqueArticles.setEnabled(false);

        jTextAreaHistoriqueArticles.setColumns(20);
        jTextAreaHistoriqueArticles.setRows(5);
        jScrollPaneHistoriqueArticles.setViewportView(jTextAreaHistoriqueArticles);

        javax.swing.GroupLayout jPanelHistoriqueLayout = new javax.swing.GroupLayout(jPanelHistorique);
        jPanelHistorique.setLayout(jPanelHistoriqueLayout);
        jPanelHistoriqueLayout.setHorizontalGroup(
            jPanelHistoriqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHistoriqueLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelHistoriqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelHistoriqueLayout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(jLabelClientHistorique, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelHistoriqueLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelHistoriquePrixTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelHistoriqueLayout.createSequentialGroup()
                        .addComponent(jScrollPaneHistoriqueArticles, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 16, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanelHistoriqueLayout.createSequentialGroup()
                .addGap(201, 201, 201)
                .addComponent(jButtonRafraichirHistorique)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelHistoriqueLayout.setVerticalGroup(
            jPanelHistoriqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHistoriqueLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelHistoriqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelHistoriqueLayout.createSequentialGroup()
                        .addGroup(jPanelHistoriqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabelClientHistorique, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelHistoriqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelHistoriquePrixTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPaneHistoriqueArticles, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(jButtonRafraichirHistorique)
                .addContainerGap())
        );

        jTabbedPaneFenetre.addTab("Historique", jPanelHistorique);

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 164, 120));
        jLabel2.setText("Responsable VPC");

        jLabel3.setText("Identifiant");

        jLabel4.setText("Mot de passe");

        jButtonConnexion.setText("Se Connecter");
        jButtonConnexion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConnexionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelConnexionLayout = new javax.swing.GroupLayout(jPanelConnexion);
        jPanelConnexion.setLayout(jPanelConnexionLayout);
        jPanelConnexionLayout.setHorizontalGroup(
            jPanelConnexionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConnexionLayout.createSequentialGroup()
                .addGroup(jPanelConnexionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelConnexionLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2))
                    .addGroup(jPanelConnexionLayout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addGroup(jPanelConnexionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelConnexionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonConnexion)
                            .addGroup(jPanelConnexionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextFieldConnectName, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                                .addComponent(jTextFieldConnectPWord)))))
                .addContainerGap(159, Short.MAX_VALUE))
        );
        jPanelConnexionLayout.setVerticalGroup(
            jPanelConnexionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConnexionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(123, 123, 123)
                .addGroup(jPanelConnexionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldConnectName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelConnexionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldConnectPWord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(34, 34, 34)
                .addComponent(jButtonConnexion)
                .addContainerGap(151, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneFenetre, javax.swing.GroupLayout.PREFERRED_SIZE, 514, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jPanelConnexion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 2, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneFenetre)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanelConnexion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void clickClient(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clickClient
        // TODO add your handling code here:
        // AFFICHAGE CLIENTS
        int row = jTableClients.rowAtPoint(evt.getPoint()); // On récupère la ligne dans laquelle est la souris au clic
        
        if (row >= 0) { // Pour être sûr qu'on a bien sélectionné une ligne du tableau 
            System.out.println("Coucou je suis a la ligne "+Integer.toString(row));
            int idClient = (int) jTableClients.getValueAt(row, 0);//Integer.parseInt(jTableClients.getValueAt(row, 0).toString());
            this.ID_Select_Client = idClient;
            System.out.println("L'ID du client selectionne est "+idClient);
            this.RemplirFicheClients(idClient);
        }

    }//GEN-LAST:event_clickClient
    public void viderTextFieldsArticles(){
        jTextFieldLibelleArticle.setText("");
        jTextFieldPrixArticle.setText("");
        jTextFieldStockArticle.setText("");
        jTextFieldRefArticle.setText("");
        
        jButtonModifierArticle.setEnabled(false);
        jButtonSupprimerArticle.setEnabled(false);
        
        this.ID_Select_Article = 0;
        this.RemplirListeArticles();
    }
    
    public void viderTextFieldsClient() {
        jTextAreaAdresse.setText("");
        jTextFieldNomClient.setText("");
        jTextFieldPrenomClient.setText("");
        jTextFieldMailClient.setText("");
        jTextFieldNumClient.setText("");
        
        jButtonModifierClient.setEnabled(false);
        jButtonSupprimerClient.setEnabled(false);
        
        this.ID_Select_Client = 0;
        
        this.RemplirListeClients();
    }
    
    public void viderTextFieldsCommande(){
        jTextFieldIdClient.setText("");
        jTextFieldDateCommande.setText("");
        jLabelPrixCommande.setText("0 €");
        
        DefaultTableModel tableauVideCommande = new DefaultTableModel();
        String[] entete = {"Article","Nombre","Prix indv.","Prix total"};
        tableauVideCommande.setColumnIdentifiers(entete);
        
        jTableContenuCommande.setModel(tableauVideCommande);
        this.RemplirListeCommandes();
        
    }
    
    private void jButtonConnexionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConnexionActionPerformed
        // TODO add your handling code here:
        jPanelConnexion.setVisible(false);
        jTabbedPaneFenetre.setVisible(true);
    }//GEN-LAST:event_jButtonConnexionActionPerformed
    
    private void ModificationClient(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModificationClient
        try {
            // TODO add your handling code here:
            System.out.println("Modification d'un client");
            
            // On récupère les valeurs des TextFields :
            String nomClientMod = jTextFieldNomClient.getText();
            String prenomClientMod = jTextFieldPrenomClient.getText();
            String adresseClientMod = jTextAreaAdresse.getText();
            String mailClientMod = jTextFieldMailClient.getText();
            String numeroClientMod = jTextFieldNumClient.getText();
            
            String requete = "UPDATE `t_clients` SET `nom`='"+nomClientMod+"',`prenom`='"+prenomClientMod+"',`adresse`='"+adresseClientMod+"',`numero`='"+numeroClientMod+"',`mail`='"+mailClientMod+"' WHERE `Id_Client`="+this.ID_Select_Client; // Récupération des données
            Statement myStatement = this.connection.createStatement();
            myStatement.executeUpdate(requete);
            
            this.viderTextFieldsClient();
        } catch (SQLException ex) {
            Logger.getLogger(IHM_Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_ModificationClient

    private void jButtonSupprimerClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSupprimerClientActionPerformed
        try {
            // TODO add your handling code here:String requete = "UPDATE `t_clients` SET `nom`='"+nomClientMod+"',`prenom`='"+prenomClientMod+"',`adresse`='"+adresseClientMod+"',`numero`='"+numeroClientMod+"',`mail`='"+mailClientMod+"' WHERE `Id_Client`="+this.ID_Select_Client; // Récupération des données
            Statement myStatement = this.connection.createStatement();
            String requete = "DELETE FROM `t_clients` WHERE `Id_Client`="+this.ID_Select_Client; // Récupération des données

            myStatement.executeUpdate(requete);
            
            this.viderTextFieldsClient();
        } catch (SQLException ex) {
            Logger.getLogger(IHM_Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButtonSupprimerClientActionPerformed

    private void jButtonRafraichirClientsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRafraichirClientsActionPerformed
        // TODO add your handling code here:
        viderTextFieldsClient();
    }//GEN-LAST:event_jButtonRafraichirClientsActionPerformed

    private void jTableArticlesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableArticlesMousePressed
        // TODO add your handling code here:
        viderTextFieldsArticles();
    }//GEN-LAST:event_jTableArticlesMousePressed

    private void jButtonRafraichirArticlesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRafraichirArticlesActionPerformed
        // TODO add your handling code here:
        viderTextFieldsArticles();
    }//GEN-LAST:event_jButtonRafraichirArticlesActionPerformed

    private void jButtonRafraichirCommandesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRafraichirCommandesActionPerformed
        // TODO add your handling code here:
        this.viderTextFieldsCommande();
    }//GEN-LAST:event_jButtonRafraichirCommandesActionPerformed

    private void clickArticle(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clickArticle
        // TODO add your handling code here:
        // AFFICHAGE ARTICLES
        int row = jTableArticles.rowAtPoint(evt.getPoint()); // On récupère la ligne dans laquelle est la souris au clic
        
        if (row >= 0) { // Pour être sûr qu'on a bien sélectionné une ligne du tableau 
            System.out.println("Coucou je suis a la ligne "+Integer.toString(row));
            int idArticle = (int) jTableArticles.getValueAt(row, 0);//Integer.parseInt(jTableClients.getValueAt(row, 0).toString());
            this.ID_Select_Article = idArticle;
            System.out.println("L'ID de l'article selectionne est "+idArticle);
            this.RemplirFicheArticle(idArticle);
        }
    }//GEN-LAST:event_clickArticle

    private void jButtonModifierArticleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModifierArticleActionPerformed
        try {
            // TODO add your handling code here:
            System.out.println("Modification d'un article");
            
            // On récupère les valeurs des TextFields :
            String libelleArticleMod = jTextFieldLibelleArticle.getText();
            String stockArticleMod = jTextFieldStockArticle.getText();
            String prixArticleMod = jTextFieldPrixArticle.getText();
            String referenceArticleMod = jTextFieldRefArticle.getText();
            
            String requete = "UPDATE `t_article` SET `libelle`=\""+libelleArticleMod+"\", `reference`='"+referenceArticleMod+"',`prix`='"+prixArticleMod+"',`stock`='"+stockArticleMod+"' WHERE `Id_Article`='"+this.ID_Select_Article+"'"; // Récupération des données
            Statement myStatement = this.connection.createStatement();
            myStatement.executeUpdate(requete);
            
            this.viderTextFieldsArticles();
        } catch (SQLException ex) {
            Logger.getLogger(IHM_Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButtonModifierArticleActionPerformed

    private void jButtonSupprimerArticleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSupprimerArticleActionPerformed
        try {
            // TODO add your handling code here:
            String requete = "DELETE FROM `t_article` WHERE `Id_Article`='"+this.ID_Select_Article+"'"; // Récupération des données
            Statement myStatement = this.connection.createStatement();
            myStatement.executeUpdate(requete);
            this.viderTextFieldsArticles();
            
        } catch (SQLException ex) {
            Logger.getLogger(IHM_Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonSupprimerArticleActionPerformed

    private void clickCommande(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clickCommande
        // TODO add your handling code here:
        int row = jTableCommandes.rowAtPoint(evt.getPoint()); // On récupère la ligne dans laquelle est la souris au clic
        
        if (row >= 0) { // Pour être sûr qu'on a bien sélectionné une ligne du tableau 
            System.out.println("Coucou je suis a la ligne "+Integer.toString(row));
            int idCommande = (int) jTableCommandes.getValueAt(row, 0);//Integer.parseInt(jTableClients.getValueAt(row, 0).toString());
            this.ID_Select_Commande = idCommande;
            System.out.println("L'ID de la commande selectionne est "+idCommande);
            this.RemplirFicheCommande(idCommande);
        }
    }//GEN-LAST:event_clickCommande

    private void jButtonValiderCommandeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonValiderCommandeActionPerformed
        try {
            // TODO add your handling code here:
            String requete = "UPDATE `t_commandes` SET `validation`='1' WHERE `id_commande`='"+this.ID_Select_Commande +"'" ;
            Statement myStatement = this.connection.createStatement();
            myStatement.executeUpdate(requete);
            this.viderTextFieldsCommande();
        } catch (SQLException ex) {
            Logger.getLogger(IHM_Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonValiderCommandeActionPerformed

    private void jButtonRefuserCommandeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRefuserCommandeActionPerformed
        // TODO add your handling code here:
        this.jDialogRefusCommande.setVisible(true);
    }//GEN-LAST:event_jButtonRefuserCommandeActionPerformed

    private void jButtonValiderRefusCommandeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonValiderRefusCommandeActionPerformed
        try {
            // On supprime dans l'onglet commande
            String requete = "DELETE FROM `t_commandes` WHERE `id_commande` = "+this.ID_Select_Commande;
            Statement myStatement = this.connection.createStatement();
            myStatement.executeUpdate(requete);
            
            // On supprime les articles de la commande
            requete = "DELETE FROM `t_articles_commandes` WHERE `id_commande` = "+this.ID_Select_Commande;
            myStatement.executeUpdate(requete);
            this.ID_Select_Commande = 0;
            this.viderTextFieldsCommande();
            this.jDialogRefusCommande.setVisible(false);
        } catch (SQLException ex) {
            Logger.getLogger(IHM_Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButtonValiderRefusCommandeActionPerformed

    private void jButtonRefuserRefusCommandeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRefuserRefusCommandeActionPerformed
        // TODO add your handling code here:
        this.jDialogRefusCommande.setVisible(false);
    }//GEN-LAST:event_jButtonRefuserRefusCommandeActionPerformed

    private void jButtonRafraichirHistoriqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRafraichirHistoriqueActionPerformed
        // TODO add your handling code here:
        this.RemplirListeCommandesHist();
    }//GEN-LAST:event_jButtonRafraichirHistoriqueActionPerformed

    private void clickHistorique(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clickHistorique
        // TODO add your handling code here:
        int row = jTableCommandesHist.rowAtPoint(evt.getPoint()); // On récupère la ligne dans laquelle est la souris au clic
        
        if (row >= 0) { // Pour être sûr qu'on a bien sélectionné une ligne du tableau 
            System.out.println("Coucou je suis a la ligne "+Integer.toString(row));
            int idCommande = (int) jTableCommandesHist.getValueAt(row, 0);//Integer.parseInt(jTableClients.getValueAt(row, 0).toString());
            this.ID_Select_Commande_Historique = idCommande;
            System.out.println("L'ID de la commande selectionne est "+idCommande);
            this.RemplirFicheCommandeHistorique(idCommande);
        }
    }//GEN-LAST:event_clickHistorique
    
    public void RemplirFicheCommandeHistorique(int idCommande){
        try {
            jTextAreaHistoriqueArticles.setText("");
            // D'abord le prix total de la commande
            String requete = "SELECT * FROM `t_commandes` WHERE `id_commande` = '"+idCommande+"'";
            Statement myStatement = this.connection.createStatement();
            ResultSet infosCommande = myStatement.executeQuery(requete);
            infosCommande.next();
            System.out.println(infosCommande.getString(4));
            
            jLabelHistoriquePrixTotal.setText(infosCommande.getString(4)+" €");
            String idClient = infosCommande.getString(3);

            // On récupère maintenant le nom et le prénom du client :
            requete = "SELECT * FROM `t_clients` WHERE `Id_Client`='"+idClient+"'";
            ResultSet monClient = myStatement.executeQuery(requete);
            monClient.next();
            String nomClient = monClient.getString(2).toUpperCase()+" "+monClient.getString(3);
            jLabelClientHistorique.setText(nomClient);
            
            // Ensuite le contenu de la commande :
            requete = "SELECT * FROM `t_articles_commandes`,`t_article` WHERE `id_commande`='"+idCommande+"' AND `t_article`.`Id_Article` = `t_articles_commandes`.`id_article`;";
            infosCommande = myStatement.executeQuery(requete);
            DefaultTableModel monTableau = new DefaultTableModel(); // Création du contenu du tableau
            String[] entete = {"Article","Nombre","Prix indiv","Prix total"};
            monTableau.setColumnIdentifiers(entete); // On affecte l'entête au tableau
            String ligne = "";
            while (infosCommande.next()){
                ligne+=infosCommande.getString(6)+"  x"; // Libellé article
                ligne+=infosCommande.getString(3)+"   "; // Nombre d'articles
                ligne+=infosCommande.getFloat(3)*infosCommande.getFloat(9)+"€ \n"; // Prix total
                jTextAreaHistoriqueArticles.append(ligne);
                ligne = "";
            }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(IHM_Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    public void RemplirFicheClients(int idClient){
        try {
            String requete = "SELECT * FROM `t_clients` WHERE `Id_Client` = "+idClient;
            Statement myStatement = this.connection.createStatement();
            ResultSet infosClient = myStatement.executeQuery(requete);
            infosClient.next();
            String nom = infosClient.getString(2);
            String prenom = infosClient.getString(3);
            String adresse = infosClient.getString(4);
            String mail = infosClient.getString(6);
            String numero = infosClient.getString(5);
            
            jTextFieldNomClient.setText(nom);
            jTextFieldPrenomClient.setText(prenom);
            jTextAreaAdresse.setText(adresse);
            jTextFieldMailClient.setText(mail);
            jTextFieldNumClient.setText(numero);
            
            jButtonModifierClient.setEnabled(true);
            jButtonSupprimerClient.setEnabled(true);
            
        } catch (SQLException ex) {
            Logger.getLogger(IHM_Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void RemplirFicheArticle(int idArticle){
        try {
            String requete = "SELECT * FROM `t_article` WHERE `Id_Article` = "+idArticle;
            Statement myStatement = this.connection.createStatement();
            ResultSet infosArticle = myStatement.executeQuery(requete);
            infosArticle.next();
            String libelle = infosArticle.getString(2);
            String stock = infosArticle.getString(7);
            String genre = infosArticle.getString(3);
            String prix = infosArticle.getString(5);
            String reference = infosArticle.getString(4);
            
            // Recuperation du genre de l'article :
            requete = "SELECT `libelle_Genre` FROM `t_genre` WHERE `Id_Genre`='"+genre+"'";
            ResultSet genreArticle = myStatement.executeQuery(requete);
            
            genreArticle.next();
            
            System.out.println(genreArticle.getString(1));
            
            jTextFieldLibelleArticle.setText(libelle);
            jTextFieldStockArticle.setText(stock);
            jLabelGenreArticle.setText(genreArticle.getString(1));
            jTextFieldPrixArticle.setText(prix);
            jTextFieldRefArticle.setText(reference);
            
            jButtonModifierArticle.setEnabled(true);
            jButtonSupprimerArticle.setEnabled(true);
            
        } catch (SQLException ex) {
            Logger.getLogger(IHM_Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void RemplirFicheCommande(int idCommande){
        try {
            // D'abord les infos de la commande
            String requete = "SELECT * FROM `t_commandes` WHERE `id_commande` = '"+idCommande+"' AND `validation`='0'";
            Statement myStatement = this.connection.createStatement();
            ResultSet infosCommande = myStatement.executeQuery(requete);
            infosCommande.next();
            System.out.println(infosCommande.getString(4));
            
            jLabelPrixCommande.setText(infosCommande.getString(4)+" €");
            jTextFieldIdClient.setText(infosCommande.getString(3));
            jTextFieldDateCommande.setText(infosCommande.getString(2));
            
            // Ensuite le contenu de la commande :
            requete = "SELECT * FROM `t_articles_commandes`,`t_article` WHERE `id_commande`='"+idCommande+"' AND `t_article`.`Id_Article` = `t_articles_commandes`.`id_article`;";
            infosCommande = myStatement.executeQuery(requete);
            DefaultTableModel monTableau = new DefaultTableModel(); // Création du contenu du tableau
            String[] entete = {"Article","Nombre","Prix indiv","Prix total"};
            monTableau.setColumnIdentifiers(entete); // On affecte l'entête au tableau
            Object[] ligne = new Object[4]; 
            while (infosCommande.next()){
                ligne[0] = infosCommande.getString(6); // Libellé article
                ligne[1] = infosCommande.getString(3); // Nombre d'articles
                ligne[2] = infosCommande.getString(9); // Prix individuel
                ligne[3] = infosCommande.getFloat(3)*infosCommande.getFloat(9); // Prix total
                monTableau.addRow(ligne);
            } 
            
            jTableContenuCommande.setModel(monTableau);
            
            while (infosCommande.next()){
                System.out.println(infosCommande.getString(6));
            }
            
            jButtonValiderCommande.setEnabled(true);
            jButtonRefuserCommande.setEnabled(true);
            
        } catch (SQLException ex) {
            Logger.getLogger(IHM_Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void RemplirListeArticles(){
        try {
            // On va récupérer tous les clients
            
            int nbColonnes = 3;
            DefaultTableModel monTableau = new DefaultTableModel(); // Création du contenu du tableau
            String requete = "SELECT * FROM `t_article` WHERE 1"; // Récupération des données
            String[] entete = {"ID","Libellé","Stock"};
            monTableau.setColumnIdentifiers(entete); // On affecte l'entête au tableau
            Statement myStatement = this.connection.createStatement(); 
            ResultSet articles = myStatement.executeQuery(requete); // On récupère tous les clients dans le resultset
            Object[] ligne = new Object[nbColonnes]; 
            
            while (articles.next()){
                ligne[0] = articles.getObject(1);
                ligne[1] = articles.getObject(2);
                ligne[2] = articles.getObject(7);
                monTableau.addRow(ligne);
            }
            System.out.println("Coucou articles");
            jTableArticles.setModel(monTableau);
        } catch (SQLException ex) {
            Logger.getLogger(IHM_Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void RemplirListeCommandes(){
        try {
            // On va récupérer tous les clients
            
            int nbColonnes = 3;
            DefaultTableModel monTableau = new DefaultTableModel(); // Création du contenu du tableau
            String requete = "SELECT * FROM `t_commandes` WHERE `validation`='0'"; // Récupération des données
            String[] entete = {"ID","Date","Client"};
            String nomClient;
            monTableau.setColumnIdentifiers(entete); // On affecte l'entête au tableau
            Statement myStatementClient = this.connection.createStatement(); 
            Statement myStatementArticle = this.connection.createStatement(); 
            ResultSet articles = myStatementArticle.executeQuery(requete); // On récupère tous les clients dans le resultset
            ResultSet client;
            Object[] ligne = new Object[nbColonnes]; 
            System.out.println("Yo");
            while (articles.next()){
                ligne[0] = articles.getObject(1);
                ligne[1] = articles.getObject(2);
                requete = "SELECT `nom`, `prenom` FROM `t_clients` WHERE `Id_Client` ='"+articles.getObject(3)+"'";
                System.out.println("Yo 2 !");
                client = myStatementClient.executeQuery(requete);
                client.next();
                System.out.println("Yo 3 ?\n"+client.getObject(2).toString());
                nomClient = client.getObject(2).toString()+" "+client.getObject(1).toString();
                System.out.println("Yo 3.25 !");
                ligne[2] = nomClient;
                System.out.println("Yo 3.5 ???");
                monTableau.addRow(ligne);
                System.out.println("Yo 4 ?!");
            }
            System.out.println("Coucou commandes");
            jTableCommandes.setModel(monTableau);
        } catch (SQLException ex) {
            Logger.getLogger(IHM_Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void RemplirListeCommandesHist(){
        try {
            // On va récupérer tous les clients
            
            int nbColonnes = 3;
            DefaultTableModel monTableau = new DefaultTableModel(); // Création du contenu du tableau
            String requete = "SELECT * FROM `t_commandes` WHERE `validation`='1'"; // Récupération des données
            String[] entete = {"ID","Date"};
            monTableau.setColumnIdentifiers(entete); // On affecte l'entête au tableau
            Statement myStatementArticle = this.connection.createStatement(); 
            ResultSet articles = myStatementArticle.executeQuery(requete); // On récupère tous les clients dans le resultset
            Object[] ligne = new Object[nbColonnes];
            System.out.println("Yo");
            while (articles.next()){
                ligne[0] = articles.getObject(1);
                ligne[1] = articles.getObject(2);
                
                monTableau.addRow(ligne);
                System.out.println("Yo 4 ?!");
            }
            System.out.println("Coucou commandes");
            jTableCommandesHist.setModel(monTableau);
        } catch (SQLException ex) {
            Logger.getLogger(IHM_Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void RemplirListeClients(){
        
        try {
            // On va récupérer tous les clients
            
            int nbColonnes = 3;
            DefaultTableModel monTableau = new DefaultTableModel(); // Création du contenu du tableau
            String requete = "SELECT * FROM `t_clients`"; // Récupération des données
            String[] entete = {"ID","Nom","Prenom"};
            monTableau.setColumnIdentifiers(entete); // On affecte l'entête au tableau
            Statement myStatement = this.connection.createStatement(); 
            ResultSet clients = myStatement.executeQuery(requete); // On récupère tous les clients dans le resultset
            Object[] ligne = new Object[nbColonnes]; 
            
            while (clients.next()){
                for (int j = 0; j < nbColonnes; j++){
                    ligne[j] = clients.getObject(j+1);
                    System.out.println(clients.getString(j+1));
                }
                monTableau.addRow(ligne);
            }
            
            jTableClients.setModel(monTableau);
        } catch (SQLException ex) {
            Logger.getLogger(IHM_Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IHM_Responsable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IHM_Responsable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IHM_Responsable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IHM_Responsable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IHM_Responsable().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonConnexion;
    private javax.swing.JButton jButtonModifierArticle;
    private javax.swing.JButton jButtonModifierClient;
    private javax.swing.JButton jButtonRafraichirAlertes;
    private javax.swing.JButton jButtonRafraichirArticles;
    private javax.swing.JButton jButtonRafraichirClients;
    private javax.swing.JButton jButtonRafraichirCommandes;
    private javax.swing.JButton jButtonRafraichirHistorique;
    private javax.swing.JButton jButtonRefuserCommande;
    private javax.swing.JButton jButtonRefuserRefusCommande;
    private javax.swing.JButton jButtonSupprimerArticle;
    private javax.swing.JButton jButtonSupprimerClient;
    private javax.swing.JButton jButtonValiderCommande;
    private javax.swing.JButton jButtonValiderRefusCommande;
    private javax.swing.JDialog jDialogRefusCommande;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelClientHistorique;
    private javax.swing.JLabel jLabelGenreArticle;
    private javax.swing.JLabel jLabelHistoriquePrixTotal;
    private javax.swing.JLabel jLabelPrixCommande;
    private javax.swing.JPanel jPanelAlertes;
    private javax.swing.JPanel jPanelArticles;
    private javax.swing.JPanel jPanelClients;
    private javax.swing.JPanel jPanelCommandes;
    private javax.swing.JPanel jPanelConnexion;
    private javax.swing.JPanel jPanelHistorique;
    private javax.swing.JPanel jPanelModifClient;
    private javax.swing.JPanel jPanelModifClient1;
    private javax.swing.JPanel jPanelModifClient2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPaneHistoriqueArticles;
    private javax.swing.JTabbedPane jTabbedPaneFenetre;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTableArticles;
    private javax.swing.JTable jTableClients;
    private javax.swing.JTable jTableCommandes;
    private javax.swing.JTable jTableCommandesHist;
    private javax.swing.JTable jTableContenuCommande;
    private javax.swing.JTextArea jTextAreaAdresse;
    private javax.swing.JTextArea jTextAreaHistoriqueArticles;
    private javax.swing.JTextField jTextFieldConnectName;
    private javax.swing.JTextField jTextFieldConnectPWord;
    private javax.swing.JTextField jTextFieldDateCommande;
    private javax.swing.JTextField jTextFieldIdClient;
    private javax.swing.JTextField jTextFieldLibelleArticle;
    private javax.swing.JTextField jTextFieldMailClient;
    private javax.swing.JTextField jTextFieldNomClient;
    private javax.swing.JTextField jTextFieldNumClient;
    private javax.swing.JTextField jTextFieldPrenomClient;
    private javax.swing.JTextField jTextFieldPrixArticle;
    private javax.swing.JTextField jTextFieldRefArticle;
    private javax.swing.JTextField jTextFieldStockArticle;
    // End of variables declaration//GEN-END:variables
}
