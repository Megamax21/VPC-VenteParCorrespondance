
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
public final class IHM_Responsable extends javax.swing.JFrame {

    /**
     * Creates new form IHM_Responsable
     */
    public Connection connection = null;
    public int ID_Select_Client=0;
    public int ID_Select_Article=0;
    public int ID_Select_Commande=0;
    public int ID_Select_Commande_Historique=0;
    public int ID_Responsable = 0;
    public String userName;
    
    public boolean showOldPassword = false;
    public boolean showNewPassword = false;
    public boolean showConfirmPassword = false;
    
    public IHM_Responsable() {
        initComponents();
        jTabbedPaneFenetre.setVisible(false);
        
        /* A décommenter si je suis au lycée ! ! ! 
        String url = "jdbc:mysql://10.194.196.225:3306/VPC";
        String user = "VPC";
        String password = "SsznuHD19q51!dNS";
        */
        /* A décommenter si je suis hors des cours ! ! ! */ 
        String url = "jdbc:mysql://localhost/vpc";
        String user = "root";
        String password = "";
        System.out.println("COMMENCEMENT");
       
             
        try {
            this.connection = DriverManager.getConnection(url,user,password);
            System.out.println("Connection successful");
            
            // Tout ce qu'il y a à faire après la connexion à la BDD, au commencement
            this.RemplirListeClients();
            this.RemplirListeArticles();
            this.RemplirListeCommandes();
            this.RemplirListeCommandesHist();
            
            this.jMenuBar1.setVisible(false);
            this.jPanelModifProfil.setVisible(false);
            
            
            this.RecuperationAlertes();
            this.RemplirListeAlertes();
        } catch (SQLException ex) {
            Logger.getLogger(IHM_Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialogRefusCommande = new javax.swing.JDialog();
        jLabel7 = new javax.swing.JLabel();
        jButtonRefuserRefusCommande = new javax.swing.JButton();
        jButtonValiderRefusCommande = new javax.swing.JButton();
        jDialogCreationArticle = new javax.swing.JDialog();
        jLabel20 = new javax.swing.JLabel();
        jTextFieldLibelleCreationArticle = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jComboBoxGenreCreationArticle = new javax.swing.JComboBox<>();
        jTextFieldReferenceCreationArticle = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jTextFieldPrixCreationArticle = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jComboBoxTypeCreationArticle = new javax.swing.JComboBox<>();
        jTextFieldStockCreationArticle = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jButtonRefusCreationArticle = new javax.swing.JButton();
        jButtonCreerCreationArticle = new javax.swing.JButton();
        jTextFieldSeuilCreationArticle = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jDialogAjoutClient = new javax.swing.JDialog();
        jLabel31 = new javax.swing.JLabel();
        jTextFieldNomCreationClient = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jTextFieldPrenomCreationClient = new javax.swing.JTextField();
        jTabbedPaneFenetre = new javax.swing.JTabbedPane();
        jPanelClients = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanelModifClient = new javax.swing.JPanel();
        jButtonModifierClient = new javax.swing.JButton();
        jButtonSupprimerClient = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextFieldNomClient = new javax.swing.JTextField();
        jTextFieldPrenomClient = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTextFieldMailClient = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTextFieldNumClient = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jTextFieldNumeroRueClient = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        jTextFieldNomDeRueClient = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        jTextFieldCodePostalClient = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        jTextFieldVilleClient = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaComplementAdresse = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableClients = new javax.swing.JTable();
        jButtonRafraichirClients = new javax.swing.JButton();
        jPanelArticles = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jPanelModifClient1 = new javax.swing.JPanel();
        jButtonModifierArticle = new javax.swing.JButton();
        jButtonSupprimerArticle = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jTextFieldLibelleArticle = new javax.swing.JTextField();
        jTextFieldStockArticle = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jTextFieldPrixArticle = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jTextFieldRefArticle = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabelGenreArticle = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldSeuilArticle = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTableArticles = new javax.swing.JTable();
        jButtonRafraichirArticles = new javax.swing.JButton();
        jButtonCreationArticle = new javax.swing.JButton();
        jPanelCommandes = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jPanelModifClient2 = new javax.swing.JPanel();
        jButtonRefuserCommande = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jTextFieldIdClient = new javax.swing.JTextField();
        jTextFieldDateCommande = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableContenuCommande = new javax.swing.JTable();
        jButtonValiderCommande = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabelPrixCommande = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTableCommandes = new javax.swing.JTable();
        jButtonRafraichirCommandes = new javax.swing.JButton();
        jPanelAlertes = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTableAlertes = new javax.swing.JTable();
        jButtonRafraichirAlertes = new javax.swing.JButton();
        jPanelHistorique = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTableCommandesHist = new javax.swing.JTable();
        jButtonRafraichirHistorique = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabelHistoriquePrixTotal = new javax.swing.JLabel();
        jLabelClientHistorique = new javax.swing.JLabel();
        jScrollPaneHistoriqueArticles = new javax.swing.JScrollPane();
        jTextAreaHistoriqueArticles = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jPanelConnexion = new javax.swing.JPanel();
        jTextFieldConnectName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButtonConnexion = new javax.swing.JButton();
        jLabelConnectionEchouee = new javax.swing.JLabel();
        jTextFieldPWord = new javax.swing.JPasswordField();
        jPanelModifProfil = new javax.swing.JPanel();
        jLabelBonjourResponsable = new javax.swing.JLabel();
        jPasswordFieldNewPassword = new javax.swing.JPasswordField();
        jPasswordFieldOldPassword = new javax.swing.JPasswordField();
        jPasswordFieldConfirmPassword = new javax.swing.JPasswordField();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jButtonShowAncien = new javax.swing.JButton();
        jButtonShowNouveau = new javax.swing.JButton();
        jButtonShowConfirmer = new javax.swing.JButton();
        jButtonChangerMDP = new javax.swing.JButton();
        jLabelChangementDeMDP = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuInterface = new javax.swing.JMenu();
        jMenuItemInterface = new javax.swing.JMenuItem();
        jMenuItemProfil = new javax.swing.JMenuItem();

        jDialogRefusCommande.setMinimumSize(new java.awt.Dimension(340, 175));

        jLabel7.setFont(new java.awt.Font("Amiri Quran", 1, 24)); // NOI18N
        jLabel7.setText("<html>\n<p style=\"font-family:'Comic Sans MS'\">Etes vous sur de vouloir <br/>\nrefuser cette commande ?</p>\n</html>");

        jButtonRefuserRefusCommande.setText("NON");
        jButtonRefuserRefusCommande.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRefuserRefusCommandeActionPerformed(evt);
            }
        });

        jButtonValiderRefusCommande.setText("OUI");
        jButtonValiderRefusCommande.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonValiderRefusCommandeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialogRefusCommandeLayout = new javax.swing.GroupLayout(jDialogRefusCommande.getContentPane());
        jDialogRefusCommande.getContentPane().setLayout(jDialogRefusCommandeLayout);
        jDialogRefusCommandeLayout.setHorizontalGroup(
            jDialogRefusCommandeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogRefusCommandeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialogRefusCommandeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDialogRefusCommandeLayout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jDialogRefusCommandeLayout.createSequentialGroup()
                        .addComponent(jButtonValiderRefusCommande, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonRefuserRefusCommande, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jDialogRefusCommandeLayout.setVerticalGroup(
            jDialogRefusCommandeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogRefusCommandeLayout.createSequentialGroup()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jDialogRefusCommandeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonValiderRefusCommande, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonRefuserRefusCommande, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        jDialogCreationArticle.setMinimumSize(new java.awt.Dimension(514, 444));

        jLabel20.setText("Création d'un nouvel article");

        jLabel25.setText("Libellé");

        jLabel26.setText("Genre");

        jLabel28.setText("Référence");

        jLabel29.setText("Prix");

        jLabel30.setText("Type");

        jLabel32.setText("Stock");

        jButtonRefusCreationArticle.setText("Annuler");
        jButtonRefusCreationArticle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRefusCreationArticleActionPerformed(evt);
            }
        });

        jButtonCreerCreationArticle.setText("Créer");
        jButtonCreerCreationArticle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreerCreationArticleActionPerformed(evt);
            }
        });

        jTextFieldSeuilCreationArticle.setText("10");

        jLabel27.setText("Seuil ");

        javax.swing.GroupLayout jDialogCreationArticleLayout = new javax.swing.GroupLayout(jDialogCreationArticle.getContentPane());
        jDialogCreationArticle.getContentPane().setLayout(jDialogCreationArticleLayout);
        jDialogCreationArticleLayout.setHorizontalGroup(
            jDialogCreationArticleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogCreationArticleLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialogCreationArticleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldLibelleCreationArticle)
                    .addGroup(jDialogCreationArticleLayout.createSequentialGroup()
                        .addGroup(jDialogCreationArticleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jDialogCreationArticleLayout.createSequentialGroup()
                        .addGroup(jDialogCreationArticleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jDialogCreationArticleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jTextFieldPrixCreationArticle, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jComboBoxGenreCreationArticle, javax.swing.GroupLayout.Alignment.LEADING, 0, 109, Short.MAX_VALUE)
                                .addComponent(jLabel26, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jDialogCreationArticleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldReferenceCreationArticle)
                            .addGroup(jDialogCreationArticleLayout.createSequentialGroup()
                                .addGroup(jDialogCreationArticleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel28)
                                    .addComponent(jComboBoxTypeCreationArticle, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jDialogCreationArticleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldStockCreationArticle, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jDialogCreationArticleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldSeuilCreationArticle, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialogCreationArticleLayout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(jButtonCreerCreationArticle, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                .addComponent(jButtonRefusCreationArticle, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62))
        );
        jDialogCreationArticleLayout.setVerticalGroup(
            jDialogCreationArticleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogCreationArticleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel20)
                .addGap(18, 18, 18)
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldLibelleCreationArticle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDialogCreationArticleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(jLabel28))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDialogCreationArticleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxGenreCreationArticle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldReferenceCreationArticle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jDialogCreationArticleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(jLabel30)
                    .addComponent(jLabel32)
                    .addComponent(jLabel27))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDialogCreationArticleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldPrixCreationArticle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxTypeCreationArticle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldStockCreationArticle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldSeuilCreationArticle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addGroup(jDialogCreationArticleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonRefusCreationArticle, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCreerCreationArticle, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        jLabel31.setText("Création d'un client");

        jLabel33.setText("Nom");

        jLabel34.setText("Prenom");

        javax.swing.GroupLayout jDialogAjoutClientLayout = new javax.swing.GroupLayout(jDialogAjoutClient.getContentPane());
        jDialogAjoutClient.getContentPane().setLayout(jDialogAjoutClientLayout);
        jDialogAjoutClientLayout.setHorizontalGroup(
            jDialogAjoutClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogAjoutClientLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialogAjoutClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNomCreationClient))
                .addGroup(jDialogAjoutClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDialogAjoutClientLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jDialogAjoutClientLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldPrenomCreationClient, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(178, Short.MAX_VALUE))
        );
        jDialogAjoutClientLayout.setVerticalGroup(
            jDialogAjoutClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogAjoutClientLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel31)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jDialogAjoutClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(jLabel34))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDialogAjoutClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldNomCreationClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldPrenomCreationClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(222, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPaneFenetre.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel5.setText("Visualisation et modification des clients");

        jPanelModifClient.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jButtonModifierClient.setText("Modifier");
        jButtonModifierClient.setEnabled(false);
        jButtonModifierClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificationClient(evt);
            }
        });

        jButtonSupprimerClient.setText("Supprimer");
        jButtonSupprimerClient.setEnabled(false);
        jButtonSupprimerClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSupprimerClientActionPerformed(evt);
            }
        });

        jLabel10.setText("Nom :");

        jLabel11.setText("Prénom :");

        jLabel12.setText("Mail :");

        jLabel13.setText("Numéro de téléphone :");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Adresse"));

        jLabel14.setText("Numéro");

        jLabel35.setText("Nom de rue");

        jLabel36.setText("Code Postal");

        jLabel37.setText("Ville");

        jLabel38.setText("Complément d'adresse");

        jTextAreaComplementAdresse.setColumns(20);
        jTextAreaComplementAdresse.setRows(5);
        jScrollPane1.setViewportView(jTextAreaComplementAdresse);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextFieldNumeroRueClient, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel35)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jTextFieldNomDeRueClient)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextFieldCodePostalClient, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jTextFieldVilleClient)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel38)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel35))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldNumeroRueClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNomDeRueClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(jLabel37))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldCodePostalClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldVilleClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel38)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanelModifClientLayout = new javax.swing.GroupLayout(jPanelModifClient);
        jPanelModifClient.setLayout(jPanelModifClientLayout);
        jPanelModifClientLayout.setHorizontalGroup(
            jPanelModifClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelModifClientLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelModifClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelModifClientLayout.createSequentialGroup()
                        .addComponent(jButtonModifierClient)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonSupprimerClient))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldMailClient)
                    .addComponent(jTextFieldNumClient)
                    .addGroup(jPanelModifClientLayout.createSequentialGroup()
                        .addGroup(jPanelModifClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldNomClient, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanelModifClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldPrenomClient, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)))
                    .addGroup(jPanelModifClientLayout.createSequentialGroup()
                        .addGroup(jPanelModifClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelModifClientLayout.setVerticalGroup(
            jPanelModifClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelModifClientLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelModifClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelModifClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldNomClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldPrenomClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldMailClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldNumClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelModifClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonModifierClient)
                    .addComponent(jButtonSupprimerClient))
                .addGap(6, 6, 6))
        );

        jTableClients.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableClients.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickClient(evt);
            }
        });
        jScrollPane3.setViewportView(jTableClients);

        jButtonRafraichirClients.setText("Rafraîchir");
        jButtonRafraichirClients.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRafraichirClientsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelClientsLayout = new javax.swing.GroupLayout(jPanelClients);
        jPanelClients.setLayout(jPanelClientsLayout);
        jPanelClientsLayout.setHorizontalGroup(
            jPanelClientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelClientsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelClientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanelModifClient, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanelClientsLayout.createSequentialGroup()
                .addGap(182, 182, 182)
                .addComponent(jButtonRafraichirClients, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelClientsLayout.setVerticalGroup(
            jPanelClientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelClientsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelClientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanelModifClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelClientsLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonRafraichirClients)
                .addContainerGap())
        );

        jTabbedPaneFenetre.addTab("Clients", jPanelClients);

        jLabel15.setText("Visualisation et modification des articles");

        jPanelModifClient1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jButtonModifierArticle.setText("Modifier");
        jButtonModifierArticle.setEnabled(false);
        jButtonModifierArticle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModifierArticleActionPerformed(evt);
            }
        });

        jButtonSupprimerArticle.setText("Supprimer");
        jButtonSupprimerArticle.setEnabled(false);
        jButtonSupprimerArticle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSupprimerArticleActionPerformed(evt);
            }
        });

        jLabel16.setText("Libellé :");

        jLabel17.setText("Stock :");

        jLabel18.setText("Prix :");

        jLabel19.setText("Référence :");

        jLabel6.setText("Genre :");

        jLabel2.setText("Seuil :");

        jTextFieldSeuilArticle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSeuilArticleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelModifClient1Layout = new javax.swing.GroupLayout(jPanelModifClient1);
        jPanelModifClient1.setLayout(jPanelModifClient1Layout);
        jPanelModifClient1Layout.setHorizontalGroup(
            jPanelModifClient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelModifClient1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelModifClient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelModifClient1Layout.createSequentialGroup()
                        .addGroup(jPanelModifClient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldRefArticle)
                            .addGroup(jPanelModifClient1Layout.createSequentialGroup()
                                .addComponent(jButtonModifierArticle)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonSupprimerArticle))
                            .addComponent(jTextFieldPrixArticle))
                        .addContainerGap())
                    .addGroup(jPanelModifClient1Layout.createSequentialGroup()
                        .addGroup(jPanelModifClient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19)
                            .addGroup(jPanelModifClient1Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelGenreArticle, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(28, 28, 28))
                    .addGroup(jPanelModifClient1Layout.createSequentialGroup()
                        .addGroup(jPanelModifClient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldLibelleArticle, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelModifClient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(jTextFieldStockArticle, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelModifClient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelModifClient1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 28, Short.MAX_VALUE))
                            .addGroup(jPanelModifClient1Layout.createSequentialGroup()
                                .addComponent(jTextFieldSeuilArticle, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                .addContainerGap())))))
        );
        jPanelModifClient1Layout.setVerticalGroup(
            jPanelModifClient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelModifClient1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelModifClient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelModifClient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldLibelleArticle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldStockArticle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldSeuilArticle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelModifClient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabelGenreArticle, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldPrixArticle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldRefArticle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelModifClient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonModifierArticle)
                    .addComponent(jButtonSupprimerArticle))
                .addContainerGap())
        );

        jTableArticles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Libellé", "Stock"
            }
        ));
        jTableArticles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickArticle(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableArticlesMousePressed(evt);
            }
        });
        jScrollPane5.setViewportView(jTableArticles);

        jButtonRafraichirArticles.setText("Rafraîchir");
        jButtonRafraichirArticles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRafraichirArticlesActionPerformed(evt);
            }
        });

        jButtonCreationArticle.setText("Création");
        jButtonCreationArticle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreationArticleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelArticlesLayout = new javax.swing.GroupLayout(jPanelArticles);
        jPanelArticles.setLayout(jPanelArticlesLayout);
        jPanelArticlesLayout.setHorizontalGroup(
            jPanelArticlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelArticlesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelArticlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanelArticlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelArticlesLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanelModifClient1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanelArticlesLayout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addGroup(jPanelArticlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonRafraichirArticles, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                            .addComponent(jButtonCreationArticle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanelArticlesLayout.setVerticalGroup(
            jPanelArticlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelArticlesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelArticlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelArticlesLayout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelArticlesLayout.createSequentialGroup()
                        .addComponent(jPanelModifClient1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonRafraichirArticles)
                        .addGap(37, 37, 37)
                        .addComponent(jButtonCreationArticle)))
                .addContainerGap(55, Short.MAX_VALUE))
        );

        jTabbedPaneFenetre.addTab("Articles", jPanelArticles);

        jLabel21.setText("Visualisation et modification des commandes");

        jPanelModifClient2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jButtonRefuserCommande.setText("Refuser");
        jButtonRefuserCommande.setEnabled(false);
        jButtonRefuserCommande.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRefuserCommandeActionPerformed(evt);
            }
        });

        jLabel22.setText("Id commande :");

        jLabel23.setText("Date commande :");

        jLabel24.setText("Contenu de la commande");

        jTableContenuCommande.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Article", "Nombre", "Prix indv.", "Prix total."
            }
        ));
        jScrollPane4.setViewportView(jTableContenuCommande);

        jButtonValiderCommande.setText("Valider");
        jButtonValiderCommande.setEnabled(false);
        jButtonValiderCommande.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonValiderCommandeActionPerformed(evt);
            }
        });

        jLabel1.setText("Prix commande :");

        jLabelPrixCommande.setText("0 €");

        javax.swing.GroupLayout jPanelModifClient2Layout = new javax.swing.GroupLayout(jPanelModifClient2);
        jPanelModifClient2.setLayout(jPanelModifClient2Layout);
        jPanelModifClient2Layout.setHorizontalGroup(
            jPanelModifClient2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelModifClient2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelModifClient2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelModifClient2Layout.createSequentialGroup()
                        .addComponent(jButtonValiderCommande, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(jButtonRefuserCommande, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelModifClient2Layout.createSequentialGroup()
                        .addGroup(jPanelModifClient2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelModifClient2Layout.createSequentialGroup()
                                .addGroup(jPanelModifClient2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldIdClient, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel22))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelModifClient2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel23)
                                    .addComponent(jTextFieldDateCommande, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelModifClient2Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelPrixCommande)))
                        .addGap(0, 12, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelModifClient2Layout.setVerticalGroup(
            jPanelModifClient2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelModifClient2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelModifClient2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(jLabel23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelModifClient2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldIdClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldDateCommande, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelModifClient2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabelPrixCommande))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelModifClient2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonRefuserCommande)
                    .addComponent(jButtonValiderCommande))
                .addContainerGap())
        );

        jTableCommandes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Date", "Client"
            }
        ));
        jTableCommandes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                clickCommande(evt);
            }
        });
        jScrollPane6.setViewportView(jTableCommandes);

        jButtonRafraichirCommandes.setText("Rafraîchir");
        jButtonRafraichirCommandes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRafraichirCommandesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelCommandesLayout = new javax.swing.GroupLayout(jPanelCommandes);
        jPanelCommandes.setLayout(jPanelCommandesLayout);
        jPanelCommandesLayout.setHorizontalGroup(
            jPanelCommandesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCommandesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCommandesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCommandesLayout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addGap(0, 5, Short.MAX_VALUE))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelModifClient2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCommandesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonRafraichirCommandes, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(202, 202, 202))
        );
        jPanelCommandesLayout.setVerticalGroup(
            jPanelCommandesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCommandesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCommandesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelModifClient2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelCommandesLayout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonRafraichirCommandes)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jTabbedPaneFenetre.addTab("Commandes", jPanelCommandes);

        jTableAlertes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID Article", "Demande", "Stock", "Alerte"
            }
        ));
        jScrollPane8.setViewportView(jTableAlertes);

        jButtonRafraichirAlertes.setText("Rafraîchir");
        jButtonRafraichirAlertes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRafraichirAlertesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelAlertesLayout = new javax.swing.GroupLayout(jPanelAlertes);
        jPanelAlertes.setLayout(jPanelAlertesLayout);
        jPanelAlertesLayout.setHorizontalGroup(
            jPanelAlertesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAlertesLayout.createSequentialGroup()
                .addGroup(jPanelAlertesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelAlertesLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelAlertesLayout.createSequentialGroup()
                        .addGap(210, 210, 210)
                        .addComponent(jButtonRafraichirAlertes)))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanelAlertesLayout.setVerticalGroup(
            jPanelAlertesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAlertesLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonRafraichirAlertes)
                .addContainerGap(62, Short.MAX_VALUE))
        );

        jTabbedPaneFenetre.addTab("Alertes", jPanelAlertes);

        jTableCommandesHist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID Commande", "ID Client", "Date"
            }
        ));
        jTableCommandesHist.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickHistorique(evt);
            }
        });
        jScrollPane7.setViewportView(jTableCommandesHist);

        jButtonRafraichirHistorique.setText("Rafraichir");
        jButtonRafraichirHistorique.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRafraichirHistoriqueActionPerformed(evt);
            }
        });

        jLabel8.setText("Client :");

        jLabel9.setText("Prix Total :");

        jScrollPaneHistoriqueArticles.setEnabled(false);

        jTextAreaHistoriqueArticles.setColumns(20);
        jTextAreaHistoriqueArticles.setRows(5);
        jTextAreaHistoriqueArticles.setEnabled(false);
        jScrollPaneHistoriqueArticles.setViewportView(jTextAreaHistoriqueArticles);

        jButton1.setText("Supprimer de l'historique");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimerCommandeHist(evt);
            }
        });

        javax.swing.GroupLayout jPanelHistoriqueLayout = new javax.swing.GroupLayout(jPanelHistorique);
        jPanelHistorique.setLayout(jPanelHistoriqueLayout);
        jPanelHistoriqueLayout.setHorizontalGroup(
            jPanelHistoriqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHistoriqueLayout.createSequentialGroup()
                .addGap(124, 124, 124)
                .addComponent(jButtonRafraichirHistorique)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanelHistoriqueLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelHistoriqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelHistoriqueLayout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(jLabelClientHistorique, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelHistoriqueLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelHistoriquePrixTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelHistoriqueLayout.createSequentialGroup()
                        .addComponent(jScrollPaneHistoriqueArticles, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 11, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelHistoriqueLayout.setVerticalGroup(
            jPanelHistoriqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHistoriqueLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelHistoriqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelHistoriqueLayout.createSequentialGroup()
                        .addGroup(jPanelHistoriqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabelClientHistorique, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelHistoriqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelHistoriquePrixTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPaneHistoriqueArticles, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(jPanelHistoriqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonRafraichirHistorique)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        jTabbedPaneFenetre.addTab("Historique", jPanelHistorique);

        jTextFieldConnectName.setText("Responsable");
        jTextFieldConnectName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldConnectNameActionPerformed(evt);
            }
        });

        jLabel3.setText("Identifiant");

        jLabel4.setText("Mot de passe");

        jButtonConnexion.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButtonConnexion.setText("Se Connecter");
        jButtonConnexion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConnexionActionPerformed(evt);
            }
        });

        jLabelConnectionEchouee.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jPanelConnexionLayout = new javax.swing.GroupLayout(jPanelConnexion);
        jPanelConnexion.setLayout(jPanelConnexionLayout);
        jPanelConnexionLayout.setHorizontalGroup(
            jPanelConnexionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConnexionLayout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addGroup(jPanelConnexionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jButtonConnexion)
                    .addGroup(jPanelConnexionLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(12, 12, 12)
                        .addComponent(jTextFieldConnectName, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE))
                    .addComponent(jLabelConnectionEchouee, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelConnexionLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldPWord)))
                .addGap(133, 133, 133))
        );
        jPanelConnexionLayout.setVerticalGroup(
            jPanelConnexionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConnexionLayout.createSequentialGroup()
                .addGap(166, 166, 166)
                .addGroup(jPanelConnexionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldConnectName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelConnexionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldPWord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(jButtonConnexion)
                .addGap(18, 18, 18)
                .addComponent(jLabelConnectionEchouee, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(131, Short.MAX_VALUE))
        );

        jLabel39.setText("Ancien mot de passe");

        jLabel40.setText("Nouveau mot de passe");

        jLabel41.setText("Confirmer le mot de passe");

        jButtonShowAncien.setText("Afficher");
        jButtonShowAncien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonShowAncienActionPerformed(evt);
            }
        });

        jButtonShowNouveau.setText("Afficher");
        jButtonShowNouveau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonShowNouveauActionPerformed(evt);
            }
        });

        jButtonShowConfirmer.setText("Afficher");
        jButtonShowConfirmer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonShowConfirmerActionPerformed(evt);
            }
        });

        jButtonChangerMDP.setText("VALIDER");
        jButtonChangerMDP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChangerMDPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelModifProfilLayout = new javax.swing.GroupLayout(jPanelModifProfil);
        jPanelModifProfil.setLayout(jPanelModifProfilLayout);
        jPanelModifProfilLayout.setHorizontalGroup(
            jPanelModifProfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelModifProfilLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelBonjourResponsable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(120, 120, 120))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelModifProfilLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonChangerMDP, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(181, 181, 181))
            .addGroup(jPanelModifProfilLayout.createSequentialGroup()
                .addGroup(jPanelModifProfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelModifProfilLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabelChangementDeMDP, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelModifProfilLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanelModifProfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel39, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel40, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel41, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelModifProfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPasswordFieldOldPassword)
                            .addComponent(jPasswordFieldNewPassword)
                            .addComponent(jPasswordFieldConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelModifProfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonShowAncien)
                            .addComponent(jButtonShowNouveau)
                            .addComponent(jButtonShowConfirmer))))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanelModifProfilLayout.setVerticalGroup(
            jPanelModifProfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelModifProfilLayout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addComponent(jLabelBonjourResponsable, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanelModifProfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPasswordFieldOldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel39)
                    .addComponent(jButtonShowAncien))
                .addGap(18, 18, 18)
                .addGroup(jPanelModifProfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPasswordFieldNewPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel40)
                    .addComponent(jButtonShowNouveau))
                .addGap(18, 18, 18)
                .addGroup(jPanelModifProfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPasswordFieldConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel41)
                    .addComponent(jButtonShowConfirmer))
                .addGap(49, 49, 49)
                .addComponent(jButtonChangerMDP, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabelChangementDeMDP, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                .addContainerGap())
        );

        jMenuInterface.setText("Actions");
        jMenuInterface.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuInterfaceActionPerformed(evt);
            }
        });

        jMenuItemInterface.setText("Interface");
        jMenuItemInterface.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemInterfaceActionPerformed(evt);
            }
        });
        jMenuInterface.add(jMenuItemInterface);

        jMenuItemProfil.setText("Profil");
        jMenuItemProfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemProfilActionPerformed(evt);
            }
        });
        jMenuInterface.add(jMenuItemProfil);

        jMenuBar1.add(jMenuInterface);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneFenetre, javax.swing.GroupLayout.PREFERRED_SIZE, 514, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jPanelConnexion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 2, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanelModifProfil, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneFenetre)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanelConnexion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanelModifProfil, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void clickClient(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clickClient
        // TODO add your handling code here:
        // AFFICHAGE CLIENTS
        int row = jTableClients.rowAtPoint(evt.getPoint()); // On récupère la ligne dans laquelle est la souris au clic
        
        if (row >= 0) { // Pour être sûr qu'on a bien sélectionné une ligne du tableau 
            // System.out.println("Coucou je suis a la ligne "+Integer.toString(row));
            int idClient = (int) jTableClients.getValueAt(row, 0);//Integer.parseInt(jTableClients.getValueAt(row, 0).toString());
            this.ID_Select_Client = idClient;
            System.out.println("L'ID du client selectionne est "+idClient);
            this.RemplirFicheClients(idClient);
        }

    }//GEN-LAST:event_clickClient
    public void viderTextFieldsArticles(){
        jTextFieldLibelleArticle.setText("");
        jTextFieldPrixArticle.setText("");
        jTextFieldStockArticle.setText("");
        jTextFieldRefArticle.setText("");
        
        jButtonModifierArticle.setEnabled(false);
        jButtonSupprimerArticle.setEnabled(false);
        
        this.ID_Select_Article = 0;
        this.RemplirListeArticles();
    }
    
    public void viderTextFieldsClient() {
       
        jTextFieldNomClient.setText("");
        jTextFieldPrenomClient.setText("");
        jTextFieldMailClient.setText("");
        jTextFieldNumClient.setText("");
        
        // Vider Adresse 
        jTextFieldNumeroRueClient.setText("");
        jTextFieldNomDeRueClient.setText("");
        jTextFieldCodePostalClient.setText("");
        jTextFieldVilleClient.setText("");
        jTextAreaComplementAdresse.setText("");
        
        jButtonModifierClient.setEnabled(false);
        jButtonSupprimerClient.setEnabled(false);
        
        this.ID_Select_Client = 0;
        
        this.RemplirListeClients();
    }
    
    public void viderTextFieldsCommande(){
        jTextFieldIdClient.setText("");
        jTextFieldDateCommande.setText("");
        jLabelPrixCommande.setText("0 €");
        
        DefaultTableModel tableauVideCommande = new DefaultTableModel();
        String[] entete = {"Article","Nombre","Prix indv.","Prix total"};
        tableauVideCommande.setColumnIdentifiers(entete);
        
        jTableContenuCommande.setModel(tableauVideCommande);
        jButtonValiderCommande.setEnabled(false);
        jButtonRefuserCommande.setEnabled(false);
        this.RemplirListeCommandes();
        
    }
    
    private void jButtonConnexionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConnexionActionPerformed
        try {
            // TODO add your handling code here:
            
            Statement myStatement = this.connection.createStatement();
            String requete = "SELECT * FROM `t_responsable`";
            boolean idOK = false;
            ResultSet monResultat = myStatement.executeQuery(requete);
            
            String username = jTextFieldConnectName.getText();
            String password = new String(jTextFieldPWord.getPassword());
            
            while (monResultat.next()){
                System.out.println(monResultat.getString(2) + "    " + monResultat.getString(3));
                if (monResultat.getString(2).equals(username) && monResultat.getString(3).equals(password)) {
                    idOK = true;
                    this.jMenuBar1.setVisible(true);
                    this.userName = username;
                    this.ID_Responsable = monResultat.getInt(1);
                    String bonjour = "Bonjour à vous, "+this.userName+" souhaitez vous modifier votre mot de passe ?";
                    this.jLabelBonjourResponsable.setText(bonjour);
                }
            }
            
            System.out.println(password);
            if (idOK){
                jPanelConnexion.setVisible(false);
                jTabbedPaneFenetre.setVisible(true);
            } else {
                jLabelConnectionEchouee.setText("Mauvais identifiants !");                    
            }
        } catch (SQLException ex) {
            Logger.getLogger(IHM_Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonConnexionActionPerformed
    
    private void ModificationClient(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModificationClient
        try {
            // TODO add your handling code here:
            System.out.println("Modification d'un client");
            
            // On récupère les valeurs des TextFields :
            String nomClientMod = jTextFieldNomClient.getText();
            String prenomClientMod = jTextFieldPrenomClient.getText();
            //String adresseClientMod = jTextAreaAdresse.getText();
            String mailClientMod = jTextFieldMailClient.getText();
            String numeroClientMod = jTextFieldNumClient.getText();
            

            // IL FAUT CHANGER L'ADRESSE AUSSI
            
            String requete = "UPDATE `t_clients` SET `nom`='"+nomClientMod+"',`prenom`='"+prenomClientMod+"',`numero`='"+numeroClientMod+"',`mail`='"+mailClientMod+"' WHERE `Id_Client`="+this.ID_Select_Client; // Récupération des données
            Statement myStatement = this.connection.createStatement();
            myStatement.executeUpdate(requete);
            
            this.viderTextFieldsClient();
        } catch (SQLException ex) {
            Logger.getLogger(IHM_Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_ModificationClient

    private void jButtonSupprimerClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSupprimerClientActionPerformed
        try {
            // TODO add your handling code here:
            Statement myStatement = this.connection.createStatement();
            String requete = "DELETE FROM `t_clients` WHERE `Id_Client`="+this.ID_Select_Client; // Récupération des données

            myStatement.executeUpdate(requete);
            
            this.viderTextFieldsClient();
        } catch (SQLException ex) {
            Logger.getLogger(IHM_Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButtonSupprimerClientActionPerformed

    private void jButtonRafraichirClientsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRafraichirClientsActionPerformed
        // TODO add your handling code here:
        viderTextFieldsClient();
    }//GEN-LAST:event_jButtonRafraichirClientsActionPerformed

    private void jTableArticlesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableArticlesMousePressed
        // TODO add your handling code here:
        viderTextFieldsArticles();
    }//GEN-LAST:event_jTableArticlesMousePressed
    
    public void RecuperationAlertes(){
        try {
            Statement statementArticles = connection.createStatement();
            Statement statementUpdate = connection.createStatement();
            int idArticle = 0;
            int seuilArticle = 0;
            int stockArticle;
            String requeteSelectArticles = "SELECT * FROM `t_article`";
            String requeteUpdate;
            ResultSet mesArticles = statementArticles.executeQuery(requeteSelectArticles);
            while (mesArticles.next()){
                idArticle = mesArticles.getInt(1);
                stockArticle = mesArticles.getInt(7);
                seuilArticle = mesArticles.getInt(9);
                if (seuilArticle > stockArticle ){
                    requeteUpdate = "UPDATE `t_article` SET `alerte`=1 WHERE `Id_Article`="+idArticle;
                } else {
                    requeteUpdate = "UPDATE `t_article` SET `alerte`=0 WHERE `Id_Article`="+idArticle;
                }
                statementUpdate.executeUpdate(requeteUpdate);

            }
            
            System.out.println("FIN DES ALERTES !");
            
        } catch (SQLException ex) {
            Logger.getLogger(IHM_Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void jButtonRafraichirArticlesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRafraichirArticlesActionPerformed
        // TODO add your handling code here:
        viderTextFieldsArticles();
    }//GEN-LAST:event_jButtonRafraichirArticlesActionPerformed

    private void jButtonRafraichirCommandesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRafraichirCommandesActionPerformed
        // TODO add your handling code here:
        this.viderTextFieldsCommande();
    }//GEN-LAST:event_jButtonRafraichirCommandesActionPerformed

    private void clickArticle(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clickArticle
        // TODO add your handling code here:
        // AFFICHAGE ARTICLES
        int row = jTableArticles.rowAtPoint(evt.getPoint()); // On récupère la ligne dans laquelle est la souris au clic
        
        if (row >= 0) { try {
            // Pour être sûr qu'on a bien sélectionné une ligne du tableau
            //System.out.println("Coucou je suis a la ligne "+Integer.toString(row));
            String requete;
            Statement statement = this.connection.createStatement();
            ResultSet res;
            System.out.println("On dit coucou à la ref "+jTableArticles.getValueAt(row, 0));
            requete = "SELECT `Id_Article` FROM `t_article` WHERE `reference` = '"+jTableArticles.getValueAt(row, 0)+"'";
            res = statement.executeQuery(requete);
            int idArticle = 0;
            while (res.next()){
                idArticle =res.getInt(1);
            }
            this.ID_Select_Article = idArticle;
            System.out.println("L'ID de l'article selectionne est "+idArticle);
            this.RemplirFicheArticle(idArticle);
            } catch (SQLException ex) {
                Logger.getLogger(IHM_Responsable.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_clickArticle

    private void jButtonModifierArticleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModifierArticleActionPerformed
        try {
            // TODO add your handling code here:
            System.out.println("Modification d'un article");
            
            // On récupère les valeurs des TextFields :
            String libelleArticleMod = jTextFieldLibelleArticle.getText();
            String stockArticleMod = jTextFieldStockArticle.getText();
            String prixArticleMod = jTextFieldPrixArticle.getText();
            String referenceArticleMod = jTextFieldRefArticle.getText();
            String seuil = jTextFieldSeuilArticle.getText();
            String requete = "UPDATE `t_article` SET `libelle`=\""+libelleArticleMod+"\", `reference`='"+referenceArticleMod+"',`prix`='"+prixArticleMod+"',`stock`='"+stockArticleMod+"', `seuil`='"+seuil+"' WHERE `Id_Article`='"+this.ID_Select_Article+"'"; // Récupération des données
            Statement myStatement = this.connection.createStatement();
            myStatement.executeUpdate(requete);
            
            this.viderTextFieldsArticles();
        } catch (SQLException ex) {
            Logger.getLogger(IHM_Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButtonModifierArticleActionPerformed

    private void jButtonSupprimerArticleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSupprimerArticleActionPerformed
        try {
            // TODO add your handling code here:
            // Il faut absolument que je fasse en sorte que les articles présents dans des commandes ne puissent pas être supprimés
            Statement myStatement = this.connection.createStatement();
            String requete = "SELECT DISTINCT `id_article` FROM `t_articles_commandes` ORDER BY `id_article` ASC";
            ResultSet mesIDArticles = myStatement.executeQuery(requete);
            boolean okSupp = true;
                    
            while (mesIDArticles.next()){
                System.out.println(mesIDArticles.getInt(1));
                if (this.ID_Select_Article == mesIDArticles.getInt(1)){
                    System.out.println("Ah cet article est toujours present dans certaines commandes ! (historique inclus)");
                    okSupp = false;
                }
                       
            }
            
            
            
            if (okSupp){
                requete = "DELETE FROM `t_article` WHERE `Id_Article`='"+this.ID_Select_Article+"'"; // Récupération des données
                myStatement.executeUpdate(requete);
            }
            this.viderTextFieldsArticles();
            
        } catch (SQLException ex) {
            Logger.getLogger(IHM_Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonSupprimerArticleActionPerformed

    private void clickCommande(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clickCommande
        // TODO add your handling code here:
        int row = jTableCommandes.rowAtPoint(evt.getPoint()); // On récupère la ligne dans laquelle est la souris au clic
        
        if (row >= 0) { // Pour être sûr qu'on a bien sélectionné une ligne du tableau 
            //System.out.println("Coucou je suis a la ligne "+Integer.toString(row));
            int idCommande = (int) jTableCommandes.getValueAt(row, 0);//Integer.parseInt(jTableClients.getValueAt(row, 0).toString());
            this.ID_Select_Commande = idCommande;
            System.out.println("L'ID de la commande selectionnee est "+idCommande);
            this.RemplirFicheCommande(idCommande);
        }
    }//GEN-LAST:event_clickCommande

    private void jButtonValiderCommandeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonValiderCommandeActionPerformed
        try {
            // TODO add your handling code here:
            String requete = "UPDATE `t_commandes` SET `validation`='1' WHERE `id_commande`='"+this.ID_Select_Commande +"'" ;
            Statement myStatement = this.connection.createStatement();
            Statement articlesStock = this.connection.createStatement();
            Statement modifArticles = this.connection.createStatement();
            myStatement.executeUpdate(requete);
            int reste;
            // On pense bien à faire le nombre d'articles qui se réduisent lorsque l'on valide une commande
            requete = "SELECT * FROM `t_articles_commandes` WHERE `id_commande`='"+this.ID_Select_Commande+"'";
            ResultSet mesArticlesCommande = myStatement.executeQuery(requete);
            ResultSet mesArticlesStock;
            while (mesArticlesCommande.next()){
                requete = "SELECT * FROM `t_article` WHERE `Id_Article`='"+mesArticlesCommande.getString(1)+"'";
                mesArticlesStock = articlesStock.executeQuery(requete);
                
                if (mesArticlesStock.next()){
                    /*
                    System.out.println("ARTICLE ID : "+mesArticlesStock.getString(1));
                    System.out.println(" ARTICLE STOCK : "+mesArticlesStock.getString(7));
                    System.out.println(" ARTICLE COMMANDE : "+mesArticlesCommande.getString(3));
                    */
                    reste = mesArticlesStock.getInt(7) - mesArticlesCommande.getInt(3);
                    // System.out.println("DIFFERENCE = "+reste);
                    requete = "UPDATE `t_article` SET `stock`='"+reste+"' WHERE `Id_Article`='"+mesArticlesStock.getString(1)+"'";
                    modifArticles.executeUpdate(requete);
                }
                
            }
            this.viderTextFieldsCommande();
            this.RemplirListeCommandesHist();
        } catch (SQLException ex) {
            Logger.getLogger(IHM_Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonValiderCommandeActionPerformed

    private void jButtonRefuserCommandeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRefuserCommandeActionPerformed
        // TODO add your handling code here:
        this.jDialogRefusCommande.setVisible(true);
    }//GEN-LAST:event_jButtonRefuserCommandeActionPerformed

    private void jButtonValiderRefusCommandeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonValiderRefusCommandeActionPerformed
        try {
            // On supprime dans l'onglet commande
            String requete = "DELETE FROM `t_commandes` WHERE `id_commande` = "+this.ID_Select_Commande;
            Statement myStatement = this.connection.createStatement();
            myStatement.executeUpdate(requete);
            
            // On supprime les articles de la commande
            requete = "DELETE FROM `t_articles_commandes` WHERE `id_commande` = "+this.ID_Select_Commande;
            myStatement.executeUpdate(requete);
            this.ID_Select_Commande = 0;
            this.viderTextFieldsCommande();
            this.jDialogRefusCommande.setVisible(false);
        } catch (SQLException ex) {
            Logger.getLogger(IHM_Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButtonValiderRefusCommandeActionPerformed

    private void jButtonRefuserRefusCommandeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRefuserRefusCommandeActionPerformed
        // TODO add your handling code here:
        this.jDialogRefusCommande.setVisible(false);
    }//GEN-LAST:event_jButtonRefuserRefusCommandeActionPerformed

    private void jButtonRafraichirHistoriqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRafraichirHistoriqueActionPerformed
        // TODO add your handling code here:
        this.RemplirListeCommandesHist();
    }//GEN-LAST:event_jButtonRafraichirHistoriqueActionPerformed

    private void clickHistorique(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clickHistorique
        // TODO add your handling code here:
        int row = jTableCommandesHist.rowAtPoint(evt.getPoint()); // On récupère la ligne dans laquelle est la souris au clic
        
        if (row >= 0) { // Pour être sûr qu'on a bien sélectionné une ligne du tableau 
            //System.out.println("Coucou je suis a la ligne "+Integer.toString(row));
            int idCommande = (int) jTableCommandesHist.getValueAt(row, 0);//Integer.parseInt(jTableClients.getValueAt(row, 0).toString());
            this.ID_Select_Commande_Historique = idCommande;
            System.out.println("L'ID de la commande selectionne est "+idCommande);
            this.RemplirFicheCommandeHistorique(idCommande);
        }
    }//GEN-LAST:event_clickHistorique

    private void jButtonRafraichirAlertesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRafraichirAlertesActionPerformed
        // TODO add your handling code here:
        this.RecuperationAlertes();
        RemplirListeAlertes();
    }//GEN-LAST:event_jButtonRafraichirAlertesActionPerformed

    private void jTextFieldSeuilArticleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSeuilArticleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldSeuilArticleActionPerformed

    private void jButtonRefusCreationArticleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRefusCreationArticleActionPerformed
        // TODO add your handling code here:
        this.jDialogCreationArticle.setVisible(false);
    }//GEN-LAST:event_jButtonRefusCreationArticleActionPerformed

    private void jButtonCreationArticleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreationArticleActionPerformed
        try {
            // TODO add your handling code here:
            Statement statement = this.connection.createStatement();
            ResultSet res;
            String requete;
            this.jDialogCreationArticle.setVisible(true);
            
            
            // REMPLISSAGE COMBOBOXES :
            // Combo Genre
            jComboBoxGenreCreationArticle.removeAll();
            requete = "SELECT * FROM `t_genre`";
            res = statement.executeQuery(requete);
            
            while (res.next()){
                jComboBoxGenreCreationArticle.addItem(res.getString(2));
            }
            
            // Combo Type
            jComboBoxTypeCreationArticle.removeAll();
            requete = "SELECT * FROM `t_types_vetements`";
            res = statement.executeQuery(requete);
            
            while (res.next()){
                jComboBoxTypeCreationArticle.addItem(res.getString(2));
            }
        } catch (SQLException ex) {
            Logger.getLogger(IHM_Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButtonCreationArticleActionPerformed

    private void jButtonCreerCreationArticleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreerCreationArticleActionPerformed
        try {
            // TODO add your handling code here:
            Statement stmt = this.connection.createStatement();
            String requete;
            ResultSet res;
            System.out.println("/!\\ LE RESPONSABLE CREE UN NOUVEL ARTICLE /!\\");
            
            // Petite vérification des infos entrées
            String libelle = this.jTextFieldLibelleCreationArticle.getText();
            String genre = this.jComboBoxGenreCreationArticle.getSelectedItem().toString();
            String ref = this.jTextFieldReferenceCreationArticle.getText();
            String prix = this.jTextFieldPrixCreationArticle.getText();
            String type = this.jComboBoxTypeCreationArticle.getSelectedItem().toString();
            String stock = this.jTextFieldStockCreationArticle.getText();
            /*
            System.out.println("Le libelle de l'article est "+libelle);
            System.out.println("Le genre de l'article est "+genre);
            System.out.println("La ref de l'article est "+ref);
            System.out.println("Le prix de l'article est de "+prix);
            System.out.println("Le type de l'article est "+type);
            System.out.println("Il reste "+stock+" articles en stock");
            */
            requete = "SELECT * FROM `t_genre` WHERE libelle_Genre = '"+genre+"'";
            res = stmt.executeQuery(requete);
            res.next();
            genre = res.getString(1);
            // System.out.println("On recupere l'id du genre : "+genre);
            
            requete = "SELECT * FROM `t_types_vetements` WHERE libelle_type = '"+type+"'";
            res = stmt.executeQuery(requete);
            res.next();
            type = res.getString(1);
            //System.out.println("On recupere l'id du type : "+type);
            
            // On rajoute l'article !
            requete = "INSERT INTO `t_article`(`libelle`, `genre`, `reference`, `prix`, `type`, `stock`, `alerte`, `seuil`) VALUES ('"+libelle+"','"+genre+"','"+ref+"','"+prix+"','"+type+"','"+stock+"','0','16')";
            stmt.executeUpdate(requete);
            
            
            this.jDialogCreationArticle.setVisible(false);
            this.viderTextFieldsArticles();
            this.RemplirListeArticles();
            
        } catch (SQLException ex) {
            Logger.getLogger(IHM_Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonCreerCreationArticleActionPerformed

    private void supprimerCommandeHist(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimerCommandeHist
        try {
            /*
            D'abord on vérifie que l'ID de commande historique sélectionné est bien
            présent dans la BDD
            Ca marche
            */
            boolean okSupp = false;
            String requete = "SELECT `id_commande` FROM `t_commandes` WHERE `validation`=1";
            Statement stmt = this.connection.createStatement();
            ResultSet mesIdCommandes = stmt.executeQuery(requete);
            while (mesIdCommandes.next()){
                System.out.print(mesIdCommandes.getInt(1)+" ");
                if (this.ID_Select_Commande_Historique == mesIdCommandes.getInt(1)){
                    okSupp = true;
                }
            }
            if (okSupp){
                requete = "DELETE FROM `t_commandes` WHERE `id_commande`="+this.ID_Select_Commande_Historique;
                stmt.executeUpdate(requete);
                requete = "DELETE FROM `t_articles_commandes` WHERE `id_commande` = "+this.ID_Select_Commande_Historique;
                stmt.executeUpdate(requete);
                this.ID_Select_Commande_Historique = 0;
            }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(IHM_Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_supprimerCommandeHist

    private void jMenuInterfaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuInterfaceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuInterfaceActionPerformed

    private void jMenuItemInterfaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemInterfaceActionPerformed
        // TODO add your handling code here:
        jPanelModifProfil.setVisible(false);
        jTabbedPaneFenetre.setVisible(true);
    }//GEN-LAST:event_jMenuItemInterfaceActionPerformed

    private void jMenuItemProfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemProfilActionPerformed
        // TODO add your handling code here:
        jPanelModifProfil.setVisible(true);
        jTabbedPaneFenetre.setVisible(false);
    }//GEN-LAST:event_jMenuItemProfilActionPerformed

    private void jButtonShowAncienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonShowAncienActionPerformed
        // TODO add your handling code here:
        if (this.showOldPassword){
            jPasswordFieldOldPassword.setEchoChar('*');
            this.showOldPassword = false;
            this.jButtonShowAncien.setText("Afficher");
        } else {           
            jPasswordFieldOldPassword.setEchoChar((char)0);
            this.showOldPassword = true;
            this.jButtonShowAncien.setText("Cacher");
        }
    }//GEN-LAST:event_jButtonShowAncienActionPerformed

    private void jButtonShowNouveauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonShowNouveauActionPerformed
        // TODO add your handling code here:
        if (this.showNewPassword){
            jPasswordFieldNewPassword.setEchoChar('*');
            this.showNewPassword = false;
            this.jButtonShowNouveau.setText("Afficher");
        } else {           
            jPasswordFieldNewPassword.setEchoChar((char)0);
            this.showNewPassword = true;
            this.jButtonShowNouveau.setText("Cacher");
        }
    }//GEN-LAST:event_jButtonShowNouveauActionPerformed

    private void jButtonShowConfirmerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonShowConfirmerActionPerformed
        // TODO add your handling code here:
        if (this.showConfirmPassword){
            jPasswordFieldConfirmPassword.setEchoChar('*');
            this.showConfirmPassword = false;
            this.jButtonShowConfirmer.setText("Afficher");
        } else {           
            jPasswordFieldConfirmPassword.setEchoChar((char)0);
            this.showConfirmPassword = true;
            this.jButtonShowConfirmer.setText("Cacher");
        }
    }//GEN-LAST:event_jButtonShowConfirmerActionPerformed

    private void jTextFieldConnectNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldConnectNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldConnectNameActionPerformed

    private void jButtonChangerMDPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChangerMDPActionPerformed
        try {
            // TODO add your handling code here:
            
            /* Lorsqu'on valide on a 3 codes différents :
            0 - Pas toutes les cases complètes
            1 - Meme MDP qu'avant
            2 - Mauvais MDP
            3 - Changement MDP OK
            */
            
            int codeMDP = 0;
            
            String oldMDP = new String(jPasswordFieldOldPassword.getPassword());
            String newMDP = new String(jPasswordFieldNewPassword.getPassword());
            String confirmMDP = new String(jPasswordFieldConfirmPassword.getPassword());
            
            /*
            System.out.println(oldMDP);
            System.out.println(newMDP);
            System.out.println(confirmMDP);
            */
            
            // Premier cas : Pas toutes les cases sont complètes :
            if ("".equals(oldMDP) || "".equals(newMDP) || "".equals(confirmMDP)){
                codeMDP = 0;
                System.out.println("Il manque une case");
            } else {
                
                if (oldMDP.equals(newMDP) && oldMDP.equals(confirmMDP)){
                    codeMDP = 1;
                    System.out.println("C'est le meme mot de passe qu'avant");
                }
                
                if (!newMDP.equals(confirmMDP)){
                    codeMDP = 2;
                    System.out.println("Le MDP a confirmer n'est pas le bon");
                }
                
                if (!oldMDP.equals(newMDP) && newMDP.equals(confirmMDP)){
                    codeMDP = 3;
                    System.out.println("On peut changer de MDP !");
                }
                
            }
            
            switch (codeMDP) {
                case 0:
                    this.jLabelChangementDeMDP.setText("Une ou plusieurs cases ne sont pas complétées");
                    break;
                case 1:
                    this.jLabelChangementDeMDP.setText("Le nouveau mot de passe est le même que l'ancien");
                    break;
                case 2:
                    this.jLabelChangementDeMDP.setText("Le nouveau mot de passe n'est pas le même que dans la confirmation");
                    break;
                case 3:
                    this.jLabelChangementDeMDP.setText("Le mot de passe a été changé avec succès");
                    this.jPasswordFieldOldPassword.setText("");
                    this.jPasswordFieldNewPassword.setText("");
                    this.jPasswordFieldConfirmPassword.setText("");
                    
                    String request = "UPDATE `t_responsable` SET `mot_de_passe`='"+newMDP+"' WHERE `id` = "+this.ID_Responsable;
                    Statement stmt = this.connection.createStatement();
                    stmt.executeUpdate(request);
                    
                    break;
            }
        } catch (SQLException ex) {
            Logger.getLogger(IHM_Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
    }//GEN-LAST:event_jButtonChangerMDPActionPerformed
    
    public void RemplirFicheCommandeHistorique(int idCommande){
        try {
            jTextAreaHistoriqueArticles.setText("");
            // D'abord le prix total de la commande
            String requete = "SELECT * FROM `t_commandes` WHERE `id_commande` = '"+idCommande+"'";
            Statement myStatement = this.connection.createStatement();
            ResultSet infosCommande = myStatement.executeQuery(requete);
            infosCommande.next();
            // System.out.println(infosCommande.getString(4));
            
            jLabelHistoriquePrixTotal.setText(infosCommande.getString(4)+" €");
            String idClient = infosCommande.getString(3);

            // On récupère maintenant le nom et le prénom du client :
            requete = "SELECT * FROM `t_clients` WHERE `Id_Client`='"+idClient+"'";
            ResultSet monClient = myStatement.executeQuery(requete);
            monClient.next();
            String nomClient = monClient.getString(2).toUpperCase()+" "+monClient.getString(3);
            jLabelClientHistorique.setText(nomClient);
            
            // Ensuite le contenu de la commande :
            requete = "SELECT * FROM `t_articles_commandes`,`t_article` WHERE `id_commande`='"+idCommande+"' AND `t_article`.`Id_Article` = `t_articles_commandes`.`id_article`;";
            infosCommande = myStatement.executeQuery(requete);
            DefaultTableModel monTableau = new DefaultTableModel(); // Création du contenu du tableau
            String[] entete = {"Article","Nombre","Prix indiv","Prix total"};
            monTableau.setColumnIdentifiers(entete); // On affecte l'entête au tableau
            String ligne = "";
            while (infosCommande.next()){
                ligne+=infosCommande.getString(6)+"  x"; // Libellé article
                ligne+=infosCommande.getString(3)+"   "; // Nombre d'articles
                ligne+=infosCommande.getFloat(3)*infosCommande.getFloat(9)+"€ \n"; // Prix total
                jTextAreaHistoriqueArticles.append(ligne);
                ligne = "";
            }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(IHM_Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    public void RemplirFicheClients(int idClient){
        try {
            String requete = "SELECT * FROM `t_clients` WHERE `Id_Client` = "+idClient;
            Statement myStatement = this.connection.createStatement();
            ResultSet infosClient = myStatement.executeQuery(requete);
            infosClient.next();
            String nom = infosClient.getString(2);
            String prenom = infosClient.getString(3);
            String mail = infosClient.getString(10);
            String numero_tel = infosClient.getString(9);
            
            String nom_de_rue = infosClient.getString(4);
            String numero_rue = infosClient.getString(5);
            String code_postal = infosClient.getString(6);
            String ville = infosClient.getString(7);
            String complement_adresse = infosClient.getString(8);
            
            jTextFieldNomClient.setText(nom);
            jTextFieldPrenomClient.setText(prenom);
            jTextFieldMailClient.setText(mail);
            jTextFieldNumClient.setText(numero_tel);
            
            jTextFieldNomDeRueClient.setText(nom_de_rue);
            jTextFieldNumeroRueClient.setText(numero_rue);
            jTextFieldCodePostalClient.setText(code_postal);
            jTextFieldVilleClient.setText(ville);
            jTextAreaComplementAdresse.setText(complement_adresse);
            
            
            
            jButtonModifierClient.setEnabled(true);
            jButtonSupprimerClient.setEnabled(true);
            
        } catch (SQLException ex) {
            Logger.getLogger(IHM_Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void RemplirFicheArticle(int idArticle){
        try {
            String requete = "SELECT * FROM `t_article` WHERE `Id_Article` = "+idArticle;
            Statement myStatement = this.connection.createStatement();
            ResultSet infosArticle = myStatement.executeQuery(requete);
            infosArticle.next();
            String libelle = infosArticle.getString(2);
            String stock = infosArticle.getString(7);
            String genre = infosArticle.getString(3);
            String prix = infosArticle.getString(5);
            String reference = infosArticle.getString(4);
            String seuil = infosArticle.getString(9);
            
            // Recuperation du genre de l'article :
            requete = "SELECT `libelle_Genre` FROM `t_genre` WHERE `Id_Genre`='"+genre+"'";
            ResultSet genreArticle = myStatement.executeQuery(requete);
            
            genreArticle.next();
            
            // System.out.println(genreArticle.getString(1));
            
            jTextFieldLibelleArticle.setText(libelle);
            jTextFieldStockArticle.setText(stock);
            jLabelGenreArticle.setText(genreArticle.getString(1));
            jTextFieldPrixArticle.setText(prix);
            jTextFieldRefArticle.setText(reference);
            jTextFieldSeuilArticle.setText(seuil);
            
            jButtonModifierArticle.setEnabled(true);
            jButtonSupprimerArticle.setEnabled(true);
            
        } catch (SQLException ex) {
            Logger.getLogger(IHM_Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void RemplirFicheCommande(int idCommande){
        try {
            // D'abord les infos de la commande
            boolean okValider = true;
            String requeteArticle;
            String requete = "SELECT * FROM `t_commandes` WHERE `id_commande` = '"+idCommande+"' AND `validation`='0'";
            Statement myStatement = this.connection.createStatement();
            Statement statementArticles = this.connection.createStatement();
            ResultSet infosCommande = myStatement.executeQuery(requete);
            ResultSet article;
            infosCommande.next();
            // System.out.println(infosCommande.getString(4));
            
            jLabelPrixCommande.setText(infosCommande.getString(4)+" €");
            jTextFieldIdClient.setText(infosCommande.getString(3));
            jTextFieldDateCommande.setText(infosCommande.getString(2));
            
            String idArticle;
            
            // Ensuite le contenu de la commande :
            requete = "SELECT * FROM `t_articles_commandes`,`t_article` WHERE `id_commande`='"+idCommande+"' AND `t_article`.`Id_Article` = `t_articles_commandes`.`id_article`;";
            infosCommande = myStatement.executeQuery(requete);
            DefaultTableModel monTableau = new DefaultTableModel(); // Création du contenu du tableau
            String[] entete = {"Article","Nombre","Prix indiv","Prix total"};
            monTableau.setColumnIdentifiers(entete); // On affecte l'entête au tableau
            Object[] ligne = new Object[4]; 
            while (infosCommande.next()){
                // On vérifie si l'article est libre en stock :
                idArticle = infosCommande.getString(1);
                requeteArticle = "SELECT * FROM `t_article` WHERE `Id_Article` = '"+idArticle+"'";
                article = statementArticles.executeQuery(requeteArticle);
                article.next();
                if (infosCommande.getInt(3)>article.getInt(7)){
                    okValider = false;
                    System.out.println("Pas assez d'article dispo pour l'article "+infosCommande.getString(3));
                } 
                ligne[0] = infosCommande.getString(6); // Libellé article
                ligne[1] = infosCommande.getString(3); // Nombre d'articles
                ligne[2] = infosCommande.getString(9); // Prix individuel
                ligne[3] = infosCommande.getFloat(3)*infosCommande.getFloat(9); // Prix total
                monTableau.addRow(ligne);
            } 
            
            jTableContenuCommande.setModel(monTableau);
            /* Affichage articles commande
            while (infosCommande.next()){
                System.out.println(infosCommande.getString(6));
            }
            */
            
            jButtonValiderCommande.setEnabled(okValider);
            jButtonRefuserCommande.setEnabled(true);
            
        } catch (SQLException ex) {
            Logger.getLogger(IHM_Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void RemplirListeAlertes(){
        try {
            // On va récupérer tous les clients
            
            int nbColonnes = 3;
            DefaultTableModel monTableau = new DefaultTableModel(); // Création du contenu du tableau
            String requete = "SELECT * FROM `t_article` WHERE `alerte`=1"; // Récupération des données
            String[] entete = {"ID","Libellé","Stock"};
            monTableau.setColumnIdentifiers(entete); // On affecte l'entête au tableau
            Statement myStatement = this.connection.createStatement(); 
            ResultSet articles = myStatement.executeQuery(requete); // On récupère tous les clients dans le resultset
            Object[] ligne = new Object[nbColonnes]; 
            
            while (articles.next()){
                ligne[0] = articles.getObject(1);
                ligne[1] = articles.getObject(2);
                ligne[2] = articles.getObject(7);
                monTableau.addRow(ligne);
            }
            jTableAlertes.setModel(monTableau);
        } catch (SQLException ex) {
            Logger.getLogger(IHM_Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void RemplirListeArticles(){
        try {
            // On va récupérer tous les clients
            
            int nbColonnes = 3;
            DefaultTableModel monTableau = new DefaultTableModel(); // Création du contenu du tableau
            String requete = "SELECT * FROM `t_article` WHERE 1"; // Récupération des données
            String[] entete = {"Référence","Libellé","Stock"};
            monTableau.setColumnIdentifiers(entete); // On affecte l'entête au tableau
            Statement myStatement = this.connection.createStatement(); 
            ResultSet articles = myStatement.executeQuery(requete); // On récupère tous les clients dans le resultset
            Object[] ligne = new Object[nbColonnes]; 
            
            while (articles.next()){
                ligne[0] = articles.getObject(4);
                ligne[1] = articles.getObject(2);
                ligne[2] = articles.getObject(7);
                monTableau.addRow(ligne);
            }
            jTableArticles.setModel(monTableau);
        } catch (SQLException ex) {
            Logger.getLogger(IHM_Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void RemplirListeCommandes(){
        try {
            // On va récupérer tous les clients
            
            int nbColonnes = 3;
            DefaultTableModel monTableau = new DefaultTableModel(); // Création du contenu du tableau
            String requete = "SELECT * FROM `t_commandes` WHERE `validation`='0'"; // Récupération des données
            String[] entete = {"ID","Date","Client"};
            String nomClient;
            monTableau.setColumnIdentifiers(entete); // On affecte l'entête au tableau
            Statement myStatementClient = this.connection.createStatement(); 
            Statement myStatementCommande = this.connection.createStatement(); 
            ResultSet commande = myStatementCommande.executeQuery(requete); // On récupère tous les clients dans le resultset
            ResultSet client;
            Object[] ligne = new Object[nbColonnes]; 
            while (commande.next()){
                ligne[0] = commande.getObject(1);
                ligne[1] = commande.getObject(2); 
                requete = "SELECT `nom`, `prenom` FROM `t_clients` WHERE `Id_Client` ='"+commande.getObject(3)+"'";
                client = myStatementClient.executeQuery(requete);
                client.next();
                nomClient = client.getObject(2).toString()+" "+client.getObject(1).toString();
                ligne[2] = nomClient;
                monTableau.addRow(ligne);
            }
            jTableCommandes.setModel(monTableau);
        } catch (SQLException ex) {
            Logger.getLogger(IHM_Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void RemplirListeCommandesHist(){
        try {
            // On va récupérer tous les clients
            
            int nbColonnes = 3;
            DefaultTableModel monTableau = new DefaultTableModel(); // Création du contenu du tableau
            String requete = "SELECT * FROM `t_commandes` WHERE `validation`='1'"; // Récupération des données
            String[] entete = {"ID","Date"};
            monTableau.setColumnIdentifiers(entete); // On affecte l'entête au tableau
            Statement myStatementArticle = this.connection.createStatement(); 
            ResultSet articles = myStatementArticle.executeQuery(requete); // On récupère tous les clients dans le resultset
            Object[] ligne = new Object[nbColonnes];
            while (articles.next()){
                ligne[0] = articles.getObject(1);
                ligne[1] = articles.getObject(2);
                
                monTableau.addRow(ligne);
            }
            jTableCommandesHist.setModel(monTableau);
            jLabelClientHistorique.setText("");
            jLabelHistoriquePrixTotal.setText("");
            jTextAreaHistoriqueArticles.setText("");
        } catch (SQLException ex) {
            Logger.getLogger(IHM_Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void RemplirListeClients(){
        
        try {
            // On va récupérer tous les clients
            
            int nbColonnes = 3;
            DefaultTableModel monTableau = new DefaultTableModel(); // Création du contenu du tableau
            String requete = "SELECT * FROM `t_clients`"; // Récupération des données
            String[] entete = {"ID","Nom","Prenom"};
            monTableau.setColumnIdentifiers(entete); // On affecte l'entête au tableau
            Statement myStatement = this.connection.createStatement(); 
            ResultSet clients = myStatement.executeQuery(requete); // On récupère tous les clients dans le resultset
            Object[] ligne = new Object[nbColonnes]; 
            
            while (clients.next()){
                for (int j = 0; j < nbColonnes; j++){
                    ligne[j] = clients.getObject(j+1);
                    //System.out.println(clients.getString(j+1));
                }
                monTableau.addRow(ligne);
            }
            
            jTableClients.setModel(monTableau);
        } catch (SQLException ex) {
            Logger.getLogger(IHM_Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IHM_Responsable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IHM_Responsable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IHM_Responsable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IHM_Responsable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IHM_Responsable().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonChangerMDP;
    private javax.swing.JButton jButtonConnexion;
    private javax.swing.JButton jButtonCreationArticle;
    private javax.swing.JButton jButtonCreerCreationArticle;
    private javax.swing.JButton jButtonModifierArticle;
    private javax.swing.JButton jButtonModifierClient;
    private javax.swing.JButton jButtonRafraichirAlertes;
    private javax.swing.JButton jButtonRafraichirArticles;
    private javax.swing.JButton jButtonRafraichirClients;
    private javax.swing.JButton jButtonRafraichirCommandes;
    private javax.swing.JButton jButtonRafraichirHistorique;
    private javax.swing.JButton jButtonRefusCreationArticle;
    private javax.swing.JButton jButtonRefuserCommande;
    private javax.swing.JButton jButtonRefuserRefusCommande;
    private javax.swing.JButton jButtonShowAncien;
    private javax.swing.JButton jButtonShowConfirmer;
    private javax.swing.JButton jButtonShowNouveau;
    private javax.swing.JButton jButtonSupprimerArticle;
    private javax.swing.JButton jButtonSupprimerClient;
    private javax.swing.JButton jButtonValiderCommande;
    private javax.swing.JButton jButtonValiderRefusCommande;
    private javax.swing.JComboBox<String> jComboBoxGenreCreationArticle;
    private javax.swing.JComboBox<String> jComboBoxTypeCreationArticle;
    private javax.swing.JDialog jDialogAjoutClient;
    private javax.swing.JDialog jDialogCreationArticle;
    private javax.swing.JDialog jDialogRefusCommande;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelBonjourResponsable;
    private javax.swing.JLabel jLabelChangementDeMDP;
    private javax.swing.JLabel jLabelClientHistorique;
    private javax.swing.JLabel jLabelConnectionEchouee;
    private javax.swing.JLabel jLabelGenreArticle;
    private javax.swing.JLabel jLabelHistoriquePrixTotal;
    private javax.swing.JLabel jLabelPrixCommande;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuInterface;
    private javax.swing.JMenuItem jMenuItemInterface;
    private javax.swing.JMenuItem jMenuItemProfil;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelAlertes;
    private javax.swing.JPanel jPanelArticles;
    private javax.swing.JPanel jPanelClients;
    private javax.swing.JPanel jPanelCommandes;
    private javax.swing.JPanel jPanelConnexion;
    private javax.swing.JPanel jPanelHistorique;
    private javax.swing.JPanel jPanelModifClient;
    private javax.swing.JPanel jPanelModifClient1;
    private javax.swing.JPanel jPanelModifClient2;
    private javax.swing.JPanel jPanelModifProfil;
    private javax.swing.JPasswordField jPasswordFieldConfirmPassword;
    private javax.swing.JPasswordField jPasswordFieldNewPassword;
    private javax.swing.JPasswordField jPasswordFieldOldPassword;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPaneHistoriqueArticles;
    private javax.swing.JTabbedPane jTabbedPaneFenetre;
    private javax.swing.JTable jTableAlertes;
    private javax.swing.JTable jTableArticles;
    private javax.swing.JTable jTableClients;
    private javax.swing.JTable jTableCommandes;
    private javax.swing.JTable jTableCommandesHist;
    private javax.swing.JTable jTableContenuCommande;
    private javax.swing.JTextArea jTextAreaComplementAdresse;
    private javax.swing.JTextArea jTextAreaHistoriqueArticles;
    private javax.swing.JTextField jTextFieldCodePostalClient;
    private javax.swing.JTextField jTextFieldConnectName;
    private javax.swing.JTextField jTextFieldDateCommande;
    private javax.swing.JTextField jTextFieldIdClient;
    private javax.swing.JTextField jTextFieldLibelleArticle;
    private javax.swing.JTextField jTextFieldLibelleCreationArticle;
    private javax.swing.JTextField jTextFieldMailClient;
    private javax.swing.JTextField jTextFieldNomClient;
    private javax.swing.JTextField jTextFieldNomCreationClient;
    private javax.swing.JTextField jTextFieldNomDeRueClient;
    private javax.swing.JTextField jTextFieldNumClient;
    private javax.swing.JTextField jTextFieldNumeroRueClient;
    private javax.swing.JPasswordField jTextFieldPWord;
    private javax.swing.JTextField jTextFieldPrenomClient;
    private javax.swing.JTextField jTextFieldPrenomCreationClient;
    private javax.swing.JTextField jTextFieldPrixArticle;
    private javax.swing.JTextField jTextFieldPrixCreationArticle;
    private javax.swing.JTextField jTextFieldRefArticle;
    private javax.swing.JTextField jTextFieldReferenceCreationArticle;
    private javax.swing.JTextField jTextFieldSeuilArticle;
    private javax.swing.JTextField jTextFieldSeuilCreationArticle;
    private javax.swing.JTextField jTextFieldStockArticle;
    private javax.swing.JTextField jTextFieldStockCreationArticle;
    private javax.swing.JTextField jTextFieldVilleClient;
    // End of variables declaration//GEN-END:variables
}
